<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:presentationoptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:vm="clr-namespace:Hayman.Client.Presentation.Windows.ViewModels;assembly=Hayman.Client.Presentation.Windows" >

    <DataTemplate DataType="{x:Type vm:WindowViewModel}">
        <Grid x:Name="Root">
            <Grid Margin="8,3,8,3">
                <Button Style="{StaticResource TransparentButton}" Command="{Binding RestoreCommand}">
                    <Grid Margin="2,2,2,2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="55" />
                            <ColumnDefinition Width="25" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="38" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <!--<Image Grid.Column="0" Grid.Row="0" Source="{Binding Thumbnail}" Stretch="Fill" Width="50" Height="35"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Top" 
                               presentationoptions:Freeze="true" />-->
                        <Border Grid.Column="0" Grid.Row="0" Width="50" Height="35" >
                            <Border.Background>
                                <VisualBrush Visual="{Binding Thumbnail}" Stretch="Uniform" AlignmentX="Left" AlignmentY="Top"/>
                            </Border.Background>
                        </Border>
                        

                        <TextBlock Grid.ColumnSpan="2" 
                                   Grid.Row="1" 
                                   HorizontalAlignment="Left" 
                                   VerticalAlignment="Top" 
                                   Foreground="White" 
                                   Text="{Binding DisplayName}" 
                                   TextWrapping="NoWrap" 
                                   TextTrimming="CharacterEllipsis" />

                        <Button Grid.Column="1" Grid.RowSpan="2" VerticalAlignment="Top" HorizontalAlignment="Right"
                                Command="{Binding CloseCommand}" Style="{StaticResource CloseButtonStyle}" />
                    </Grid>
                </Button>

                <Popup x:Name="PopUpView"
                       AllowsTransparency="True"
                       IsOpen="False"
                       PlacementTarget="{Binding ElementName=Root}"
                       Placement="Bottom"
                       VerticalAlignment="Stretch"
                       HorizontalAlignment="Stretch">
                    <Popup.Effect>
                        <DropShadowEffect BlurRadius="10" RenderingBias="Performance" ShadowDepth="0" Opacity="1" Direction="2" presentationoptions:Freeze="True" />
                    </Popup.Effect>

                    <Border Grid.Column="0" Grid.Row="0" Width="300" Height="300">
                        <Border.Background>
                            <VisualBrush Visual="{Binding Thumbnail}" Stretch="Uniform" AlignmentX="Left" AlignmentY="Top"/>
                        </Border.Background>
                    </Border>
                    <!--<Image Source="{Binding Thumbnail}" presentationoptions:Freeze="true" />-->
                </Popup>
            </Grid>
        </Grid>

        <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="PopUpView" Property="IsOpen" Value="True" />
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    
    <Style x:Key="ActiveWindowContainerStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid>
                        <ContentPresenter x:Name="ContentHost" Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ItemsPanelTemplate x:Key="ActiveWindowsPanelTemplate">
        <VirtualizingStackPanel Orientation="Horizontal" IsItemsHost="True" />
    </ItemsPanelTemplate>

</ResourceDictionary>