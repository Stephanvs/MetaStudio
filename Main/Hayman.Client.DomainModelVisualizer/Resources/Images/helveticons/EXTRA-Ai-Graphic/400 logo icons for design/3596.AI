%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 8
%%For: (David Garcia) (Garcia Custom Graphix)
%%Title: (pew.ai)
%%CreationDate: (3/1/01) (10:35 PM)
%%BoundingBox: 0 0 1038 836
%%HiResBoundingBox: 0.2529 0.792 1037.0703 835.2715
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Black&White
%AI7_ImageSettings: 0
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 519 418 519 418
%AI3_TileBox: 0 0 588 768
%AI3_DocumentPreview: None
%AI5_ArtSize: 1296 1296
%AI5_RulerUnits: 2
%AI5_ArtFlags: 0 0 0 1 0 1 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: 7.5 737.5 1 1016 675 18 0 1 10 67 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%%AI3_PaperRect:-12 780 600 -12
%%AI3_Margin:12 -12 -12 12
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI7_Thumbnail: 128 104 8
%%BeginData: 7438 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD5BFFA87D27FD06F82727527DFD71FF7D27FD0EF8527DFD6CFF7D
%27FD13F852A8FD67FFA827FD17F827FD13FFFD04A8FD4DFFA852FD1BF852
%FD0FFFA8A852FFA8A852FD4AFFA827FD1EF827A8FD0DFFA8FFA8FFFF52FD
%49FF7D52FD21F8277DFD0CFF7DFF277D7D52FD44FFA8A85227FD26F87DFD
%0BFFA8FFA87DA827FFFFFF5252A87D2752277D7D7D52FF52FD21FFA87D27
%27FD3AF87DFD0AFFA8FF527DF8A8A8A87D7D277DF87D52527DA8A8A827A8
%A8FFA8FFA8FD1AFF7DFD40F87DFD0AFF7DA87D7D52A8FD045227A827A827
%7D27A85252277D277D27A8FD18FFA827FD42F8A8FD0AFF52FF7DFFFF5252
%7D2727277D2752277D277DF87D27FD1BFF52FD45F8A8FD38FF52FD46F827
%FD37FF27FD48F852FD35FF52FD4AF8A8FD33FF52FD4BF827FD32FFA8FD4D
%F8A8FD31FF27FD4DF827FD30FF7DFD4FF8A8FD2FFFFD50F827FD2EFF7DFD
%51F8A8FD2DFF52FD32F827527DA87D7D5227FD17F87DFD2DFFFD30F827A8
%FD09FF7DFD17F8FD2CFF7DFD2EF8277DFD0DFFFD16F8A8FD2BFF7DF852FD
%2BF8A852F827FD0DFF27FD14F87DFD2BFF277DFD2AF8527DFD05F8A8FD0C
%FFFD14F827FD2BFF52FFFD28F8277D27FD07F8FD0CFF7DFD14F8FD2BFF7D
%FFFD27F85252FD0AF8A87D7DFD09FF27FD13F8A8FD2CFFFD26F8A827FD0B
%F82752F8FD09FF52FD13F87DFD2CFFFD24F8277DFD10F87DFD09FFFD13F8
%52FD2CFFFD23F8277DFD11F852FD09FF52FD12F827FD2CFFFD22F852FFA8
%27FD11F8FD09FF52FD12F827FD2CFF52FD1FF8277DFD04FF52FD10F8A8FD
%09FFFD13F8FD2CFF7DFD1EF827A8FD06FF52FD0FF87DFD09FFFD13F8FD2D
%FFFD1DF87DFD09FF52FD0EF827FD09FF27FD12F8FD2DFF52FD1BF87DFD0A
%FFA827FD0EF8FD09FF27FD12F8FD2DFFA8FD1AF852FD0CFFA8FD0EF8FD09
%FF52FD12F8FD2EFF52FD15F827F8F827A87DA8FD0BFF27FD0DF8A8FD08FF
%7DFD12F8FD2FFF27FD12F8277D7DF852A8FFFF7DA8FD0BFFFD0DF8A8FD08
%FF52FD12F8FD2FFFA8FD12F8A8FF7DFD06FF7DA8FD0AFF52FD0CF87DFD08
%FF7DFD12F8FD31FF27FD0EF827A8FD0AFFA8FD0AFF7DFD0CF8A8FD08FF52
%FD12F8FD32FF27FD0DF852FD0BFFA87DFD0AFFFD0CF87DFD08FF7DFD12F8
%FD33FF7D27FD08F827F827FD0DFFA8FD0AFF52FD0BF8A8FD08FF52FD11F8
%27FD34FFA852FD07F85227FD0FFF52FD09FF7DFD0BF87DFD08FF7DFD11F8
%52FD37FF7D52FD04F852FD11FFA8FD08FFA8FD0BF8FD09FF27FD11F87DFD
%3AFF7D7D277DFD11FFA8FD09FFFD0AF827FD09FF27FD11F8A8FD4FFF7DFD
%09FFFD0AF827FD09FFFD12F8FD51FF7DFD08FFFD0AF87DFD08FFA8FD11F8
%27FD51FFA8FD06FF7DFFFD0AF87DFD08FFA8FD11F87DFD51FF7DFD06FF52
%A8FD0AF8FD09FF52FD11F8A8FD52FFA8FD05FF5252FD09F852FD09FF27FD
%11F8FD53FFA8FD05FF7DFD0AF852FD09FFFD11F852FD2AFF7DA8A8A8FD25
%FF7DFD05FF52FD0AF8FD09FF7DFD11F8A8FD22FFA8A87DA8A8FFA8A87DA8
%FFFF7DFD24FFA8FD05FF52FD09F827FD09FF27FD10F827FD23FFA852A8FD
%0AFF7DFD23FF7DFD05FF27FD09F87DFD08FF7DFD11F87DFD22FF7D52FD0D
%FF7DFD22FFA8FD05FF27FD09F8FD09FFFD11F827FD21FFA8A8FD10FF7D7D
%A8FD1FFF7DFD05FFFD09F87DFD08FF52FD11F87DFD20FF7DFD12FFA8A8A8
%FD1FFFA8FD04FFA8FD09F8A8FD07FF7DFD12F8FD20FF52A8A8FFA8A87D52
%275227527DFD09FFA8FD1FFF7DFD04FFA8FD08F852FD07FFA827FD11F8A8
%FD27FFA87DFD05F827A8FD07FFA8FD1EFFA8FD04FF52FD08F8FFA8FD06FF
%27FD11F852FD2BFF27FD04F8277DFD06FFA8FD1EFFA8FD04FF27FD07F87D
%52A8FD05FF7DFD11F827FD1FFF527D52A8FD09FFA8FD06F87DFD05FF7DFD
%1DFFA8FD05FFFD09F827FD06FFFD12F87DFD1EFF27FFFFFF7D7DFD08FF7D
%52527D52F8F8F852FD04FF7DFD1DFFA8FD04FF7DFD09F87DFD05FF27FD11
%F852FD1EFF27FD05FF52FD05FF522727FD09F852FFFFFF7DFD1DFF7DFD04
%FF27FD09F8FD05FF52FD11F827FD1EFFA87DFD06FF7DFFA87D52A8527DA8
%27FD08F827FFFFFFA8FD21FFFD09F8A8FD04FFA8F82752FD0EF827FD1CFF
%A852FD04F87DFD04FFA852A8FFA852A87DFF52F8F827527D2727F8F827A8
%FF7DFD1BFF7DFD04FF52FD08F852FD04FFA8527DFF27FD0EF8FD1CFF7DFD
%04F8272752A8FD06FFA87DA87DFF7DF8F87DFFFFFF7DFFFF52F8F85252FD
%1BFF7DFD04FF27FD07F827FD08FF52FD0DF827FD1DFF27FD08F8FFFFA87D
%7DA8FFFFFFA8FF27F8A8FF7D7DFFA852FFFF52FD04F8527DFD17FFA8FD04
%FF7DFD08F87DFD07FF52FD0DF827FD1EFF5227FD07F8FFFFFF7DFD05FFA8
%7D27FFFF7DFFFF7DFF52FFFF7DFD07F852A8FD14FFA8FD04FF27FD07F87D
%FD07FF52FD0DF852FD1FFFA8F8F82727F8F8F87DFFFFFFA852A8FFFF52FF
%52FFFF7DFD04FF7DA852FF52FD09F827FD13FF7DFFFFFF52FD07F827FD06
%FFA827FD0DF87DFD21FF27FD06F827FFFFFF7DFF52FF7DFD04FFA8FD05FF
%A8FFFFFF27F8F82727FD06F8A8FD11FF7DFD04FF27FD06F852FD06FFA8FD
%0DF827A8FD22FF52F8F8F827527DFD05FF527D7DFD05FFA8FD05FF52FFFF
%A8F8F8F8FFA87DFD05F8A8FD10FFA8A8FFFFFF52FD06F827FD06FF52FD0D
%F852A8FD23FF7DF87DA827F8F8277DA87DA85252FD05FFA8FD06FFA8FFFF
%52F8F8F8FFFFFFA8FD04F8A8FD10FFA8FFFFFFA8FD06F852FD05FFA827FD
%0CF827FD27FF275227F8F82727F8277D527D527DFFFFFF52FD06FFA8FFFF
%A8FD04F8A8FFFFFFA8F8F8F8FD10FFA8A8FFFFFFFD06F852FD05FF52FD0C
%F8277DFD28FFA8A8F8F8F8FFFF52F827A87DFFA8FFFFFFA8FFA852A8FFFF
%A8FFFF52FD04F87DFD04FF7DF87DFD10FF7DFFFFFF27FD04F8277DFD05FF
%27FD0CF87DFD2AFFA87DF8F8F8A8FFFF52F852FD06FF7DFFFFA8FFFF7DFF
%FFA8FD05F8A8A8A8FFFFFF27FD0BFFA87D7D2727FD09F852A8FFFFFFA87D
%FD0BF8277DFD2CFF27A827F8F827FFFFFFF8F8FD07FF7DA87DA8A8FFFFFF
%27FD05F8A8FFFFA87DA8A8FD08FFA85227FD05F82752A8FD06FFA8FFFFFF
%5227FD0AF8277DFD2CFFA8F8F8527DF8F8F8277D7DF8F87DFFFFFF27A8FD
%08FFA87D527D27F8F8A8FD0CFF5227FD05F82752FD08FFA87DA85252FD0B
%F8527DFD2DFFA8F8F8F827FF27FD07F8A8FD04FF7D52A8FD0CFF527DFD0A
%FF7DFD07F852FD06FF5252FD0FF8277DFD2FFFA8FD05F8A8A827FD05F852
%FD06FF7D52A8FD0CFF7D7DFD07FF7DFD08F8A8FD04FFA852FD0FF82752A8
%FD30FFA8FD06F827FFFFFF527D52A8FD07FFA8FF7D7DFD0CFFA87DFD05FF
%27FD07F827FD05FF7D27FD0EF827A8FD33FFFD08F827FD0DFF52FFFF7D52
%FD0CFF7D527D2727FD07F82752FD05FF7DFD11F87DFD32FF27FD09F827A8
%FD09FFA852FD04FFA852FD0CFF27FD07F827277DFD06FF7DFD13F87DFD30
%FF7DFD0CF827527D7DA87D7D527D7DFD07FF527DFD0AFF7DFD0FFFA8FD15
%F87DFD2FFF27FD12F8527DFD0AFFA8527DFD09FF7DFD0DFFA827FD16F87D
%FD2DFFA8FD13F8FFA8FD0CFFA8527D7DFD05FFA8FD04F827277D527DA8A8
%7D7D27FD19F87DFD2CFF7DFD13F8A8FD16FF7DFD28F87DFD2BFF7DFD13F8
%7DFD08FF7DFD0BFF7D27FD2BF87DFD2AFF27FD12F852FD09FF7D52275227
%52275227FD30F827A8FD28FFA827FD12F8FD0AFF7DFD39F852FD29FF7D27
%FD10F8A8FD0AFFFD3AF827A8FD29FFA87D5227FD0CF827FD0AFF7DFD3BF8
%A8FD2DFFA8A87D7D52522752275227277DA8527D27522752527D52FD3CF8
%5252A8A8FD34FFA8FD4CF82727A8FD30FF52FD23F8FD0527FD27F8527DFD
%2DFF7DFD1DF8A87DA8FD09FFA85227FD27F87DFD2AFFA8FD1EF8527D527D
%52FD09A87D522727FD24F827FD2AFF27FD1EF87DFD04FFA8A87DA87DA87D
%A8A8FD04FF7D27FD15F85227FD0BF8A8FD29FF27FD1FF852FD14FFA85227
%FD11F8FFFF7D27F8F8F8275227527DFD28FFA87DFD0CF827FD14F852FD18
%FF7D5227FD0CF87DFD33FFFD06F852FD07F827FFA87DFD12F8A8FD1DFFA8
%7D52522752275252A8FD33FFA8FD06F852FD07F8A8FD04FF7D52FD0EF852
%FD5CFF7D27F8F8F852A87DF8F827F8F852FD08FFA87D5227FD07F8527DFD
%5FFFA8FD08FFA8FD5AFFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration]) Pc
PB
%AI5_EndPalette
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI5_End_NonPrinting--
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
u0 O
0 0 0 1 k
800 Ar
0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D
0 XR
220.3198 0.792 m
209.9521 1.6563 196.3438 14.9756 206.064 23.04 C
242.2798 29.5918 248.688 51.7676 270.792 78.9844 C
269.1357 79.7764 267.3359 83.5918 266.688 84.6719 C
218.1602 83.2324 167.7598 87.5518 122.2559 102.6719 C
95.3281 114.3359 89.7842 125.1357 100.4399 152.0645 C
101.9521 155.4482 105.624 164.6641 108.3599 166.3203 C
124.2002 186.1924 140.5439 203.5439 161.5679 218.2324 C
161.6401 224.4238 161.7842 230.6162 161.9282 236.7363 C
153.4321 241.5596 147.6001 255.0244 153.8638 262.6563 C
162.936 271.7275 193.752 281.0156 205.1279 272.4482 C
219.6719 254.2324 170.4238 254.8076 166.6802 252.9355 C
159.9121 219.3115 161.7842 194.4004 187.8481 169.7041 C
191.4482 167.04 195.5518 164.9521 200.2319 162.7197 C
200.2319 158.04 179.5679 134.6396 179.6401 134.4961 C
186.9121 134.4961 198.7202 155.2324 202.4639 161.5684 C
204.6958 161.5684 208.9438 159.8398 212.04 158.832 C
221.9038 156.8877 231.624 155.9521 242.208 155.7363 C
242.2798 155.6641 242.3521 155.5918 242.4238 155.4482 C
256.896 157.4639 283.3198 158.9043 292.5361 173.3037 C
295.7041 182.3037 295.2002 190.8721 294.0479 199.584 C
293.1118 203.5439 280.2959 208.1523 276.6958 209.0879 C
276.6958 209.5918 276.6958 210.0244 276.7681 210.4561 C
282.6719 211.248 295.8481 200.6641 300.4561 197.0645 C
327.2402 174.3115 356.9761 146.0879 394.3438 141.624 C
394.272 141.1924 394.272 140.6885 394.272 140.1836 C
354.0962 145.1523 325.2241 175.248 295.7759 198.792 C
295.1279 192.8877 296.5679 185.9756 295.8481 178.9922 C
291.96 161.208 271.584 158.7598 256.6079 155.9521 C
252.2158 155.3037 247.8242 154.584 243.5039 153.8643 C
246.3838 147.4561 260.4961 145.584 267.4082 147.3838 C
267.5518 147.0244 267.6958 146.5918 267.8398 146.1602 C
260.9282 143.3516 246.312 149.04 245.8081 148.8242 C
254.1602 127.5117 257.688 101.2324 270.7202 80.9277 C
273.7441 81.9355 276.8398 82.8721 279.936 83.8076 C
304.4878 88.2725 329.1118 85.1035 354.5278 85.5361 C
354.5278 85.248 354.5278 84.96 354.5278 84.6719 C
367.7759 84.4561 403.3438 85.248 415.3682 73.2236 C
415.4399 73.2236 415.5122 73.2236 415.6563 73.2236 C
416.0161 73.6563 416.376 74.0156 416.7358 74.376 C
404.208 86.9043 372.2402 85.6084 357.0479 86.6162 C
353.6641 97.5596 347.6162 107.7842 343.9438 118.2236 C
337.3198 119.376 329.9761 120.5996 324.936 123.624 C
326.4482 125.6396 327.6001 123.7676 330.624 122.6885 C
345.6719 118.1523 361.584 119.6641 377.7842 119.5918 C
394.9199 120.0957 425.6641 118.7275 440.856 131.1123 C
441.6479 131.9756 442.5122 132.8398 443.376 133.6318 C
468.936 112.8965 487.1519 85.6797 495.2881 53.0645 C
533.0879 52.5596 570.96 47.7363 609.5518 51.3359 C
615.168 52.1279 621 52.7041 626.832 54.2158 C
612.9355 59.1836 597.96 65.9521 584.208 68.6885 C
553.752 68.6885 523.7998 64.8721 493.9199 65.4482 C
485.9282 92.4482 464.9038 117.5762 444.3838 135.1436 C
455.1118 158.2559 428.5439 185.4717 412.9199 197.7119 C
396.4321 209.0879 387.6479 208.584 367.8481 209.0879 C
365.9038 208.8721 364.0322 208.584 362.1602 208.2959 C
375.6958 221.832 397.3682 268.416 394.5601 288.3604 C
388.5122 305.6396 346.9678 306.7197 334.7998 304.416 C
330.8398 302.9756 293.832 269.0645 292.5361 270.3604 C
294.9839 276.4805 299.9521 290.376 305.208 293.5439 C
317.8799 309.168 314.1357 309.8877 300.4561 319.6084 C
292.3921 322.6318 288.3599 320.6162 280.6563 317.8799 C
266.688 311.6162 255.2402 306.5762 240.5518 304.8477 C
235.3682 314.7119 230.5439 325.6563 223.1279 332.7842 C
202.9678 345.8877 184.8242 327.5996 178.3438 309.0244 C
184.9678 307.3682 196.2002 310.6797 197.4238 299.1602 C
197.064 298.7998 196.7759 298.4404 196.4878 298.0801 C
173.6641 298.0801 159.4082 288.3604 145.1519 271.5117 C
139.3198 272.9521 138.7441 284.832 139.6802 288.3604 C
146.2319 302.6875 162.4321 307.7998 176.832 308.8799 C
184.4639 335.7363 214.0562 352.0078 232.1279 323.8564 C
235.1519 318.2402 238.3921 312.8398 241.3438 306.4316 C
260.3521 307.4404 276.2642 321.624 294.48 322.9199 C
308.1602 328.9678 313.4878 327.3125 306.5039 341.3516 C
287.7119 366.4082 243.936 359.5684 218.0879 357.9121 C
235.3682 372.7441 252.5762 383.4004 274.3921 390.6719 C
279.792 392.1123 279.792 392.1123 280.0078 392.3281 C
274.0322 395.2803 267.1201 394.9199 261.2158 394.7764 C
284.7598 408.8877 312.3359 408.3125 338.3999 399.8877 C
338.4722 399.96 338.5439 400.0322 338.6162 400.0322 C
335.1602 404.7119 330.48 408.3125 327.4561 412.7041 C
357.7681 410.1123 376.2002 394.4883 388.584 365.6162 C
388.6563 365.5439 388.7998 365.4717 388.9438 365.3281 C
390.8159 370.9443 392.9038 376.0557 395.208 381.3125 C
409.8242 356.5439 408.4561 323.1357 417.8159 294.9844 C
419.5439 293.2559 429.1201 290.1602 432.6479 288.7197 C
464.04 277.8477 488.0879 278.4961 475.9922 238.1758 C
472.896 230.7598 469.4399 224.1357 463.4639 218.376 C
463.3921 218.0879 463.3198 217.7275 463.248 217.3682 C
445.6802 209.5918 435.0962 220.8965 422.7119 231.7676 C
414.5762 239.4717 414.5762 239.4717 414.3599 239.4717 C
414.3599 231.9121 414.3599 224.3516 414.3599 216.792 C
414.2881 211.0322 413.9282 205.3438 413.4961 199.1523 C
422.1357 192.168 430.7759 184.1758 437.6162 174.3838 C
449.4961 174.3838 464.7598 174.3115 476.4961 179.1357 C
515.1602 207.3604 552.6719 220.1758 600.4805 226.2236 C
603.2881 226.584 606.168 226.8721 609.0479 227.1602 C
633.0957 264.96 649.7998 301.9678 657.9355 346.0322 C
658.7285 351.7197 659.5195 357.4082 660.3838 363.0957 C
664.3438 412.4883 655.3438 449.2798 631.9443 491.7598 C
619.5596 509.1118 606.5996 530.1357 587.1602 537.9121 C
581.1123 528.8398 563.4717 518.6162 552.96 517.6079 C
557.3516 522.4321 561.3125 528.0479 561.8164 534.168 C
538.7764 527.1118 516.8159 498.168 507.0239 476.856 C
506.0161 482.5439 505.0078 495.2881 501.5518 498.7441 C
497.6641 487.8721 496.1519 476.4961 497.4482 464.5439 C
497.0879 464.5439 496.728 464.5439 496.3682 464.5439 C
490.6079 465.8398 484.8481 467.1357 479.1602 468.4321 C
408.8882 487.0801 365.3281 521.4238 357.0479 595.5122 C
357.0479 617.04 359.2798 635.7598 363.5278 656.4238 C
363.4561 656.5679 363.3838 656.7119 363.3838 656.856 C
356.688 654.624 344.1602 615.0239 343.4399 612.3599 C
342.3599 624.8159 346.5361 641.9521 349.6318 653.9761 C
365.7598 706.3198 406.5122 750.0239 459.4321 766.1519 C
508.4639 775.6563 560.9521 765.2158 611.208 770.9038 C
588.7441 759.6719 568.3682 744.7681 545.4717 734.3281 C
533.4482 729.2158 521.5684 726.48 510.1201 722.1602 C
527.6875 722.1602 551.3037 734.7598 567.2158 742.8242 C
583.6318 751.8242 599.9756 762.0479 616.1035 771.9121 C
637.7041 777.3838 658.6563 784.584 678.8164 794.9521 C
711 812.52 733.752 828.936 770.5439 834.8398 C
822.96 838.3682 869.4004 822.5278 914.832 795.8159 C
922.4639 790.0562 930.0957 784.2959 937.7285 778.4639 C
958.0322 759.0962 973.2959 740.8799 989.4961 716.9038 C
1012.0322 675.8643 1026 637.7041 1033.6318 590.4722 C
1034.4238 583.7041 1035.2158 576.8643 1036.0801 570.0239 C
1038.3838 540.4321 1037.6641 510.5518 1032.3359 480.6719 C
1024.3438 438.9839 1012.6084 404.5684 992.9521 366.5518 C
983.2324 351.2881 973.3682 337.3203 962.208 322.9922 C
941.4004 298.7275 918.2881 279.792 892.7285 260.7119 C
846 230.832 799.9922 210.4561 748.5117 191.6641 C
722.376 183.2402 721.3682 183.4561 721.7285 182.2324 C
749.8076 157.6797 778.5361 130.0322 796.8965 95.9756 C
797.04 95.9043 797.2559 95.7598 797.4717 95.6162 C
797.832 95.832 798.2637 96.0479 798.6963 96.1924 C
796.8242 101.3037 774.8643 131.7598 774.9355 131.9043 C
800.7119 119.7363 823.3916 104.2559 845.4238 84.8164 C
867.168 83.6641 888.7676 81.9355 909.5039 71.9277 C
912.6719 69.8398 915.6963 66.3838 915.6963 61.6318 C
910.584 52.7041 889.4883 54.3604 881.7842 54.3604 C
876.8164 54.792 871.9199 55.1523 867.0244 55.5117 C
875.9521 51.0479 928.8721 49.6084 915.9121 68.1123 C
915.9121 70.3438 956.9521 58.1035 925.416 42.3359 C
923.6162 41.832 913.3916 39.0957 913.248 38.7363 C
899.1357 39.8164 882.6484 41.6885 870.0479 39.4561 C
882.2158 35.4238 898.6318 39.3115 911.0879 36.2158 C
906.1201 31.248 867.8164 33.7676 860.4004 34.7764 C
844.9199 38.0156 825.6963 49.5361 819.3604 63.2881 C
818.7842 63.1436 818.2803 62.9277 817.7764 62.7119 C
822.0244 51.9844 830.8076 53.2803 826.2002 38.4482 C
816.3359 13.6797 781.3438 20.0156 761.3281 21.6719 C
716.1836 25.8477 672.0479 38.7363 630.0723 53.1357 C
585 44.7842 540.5762 50.04 495.6479 51.5518 C
498.3838 35.6396 500.1118 18.792 484.5601 8.7842 C
461.8799 -2.5195 425.9521 1.1523 401.832 4.8965 C
375.3359 10.584 350.7119 18.7197 326.52 29.9521 C
326.2319 30.0244 325.9438 30.0957 325.6563 30.0957 C
320.5439 23.1836 318.3838 19.2236 315.6479 10.584 C
310.104 -2.0879 296.5679 -1.0078 286.6318 5.6162 C
286.6318 5.832 286.6318 6.0479 286.6318 6.1924 C
282.6719 10.1523 282.0239 12.7441 281.6641 18 C
281.0879 18.5762 280.5122 18.1436 280.0078 18 C
280.0078 12.8164 280.9438 8.8564 285.3359 4.9678 C
285.3359 4.4639 283.3921 3.0957 282.8882 2.6641 C
273.7441 -1.2959 262.2241 7.2002 256.9678 13.3203 C
256.752 13.3203 256.6079 13.248 256.4639 13.1758 C
247.8242 2.376 232.8481 1.4404 220.3198 0.792 C
f0 0 0 0 k
255.7441 12.6719 m
253.728 13.9678 251.856 21.2402 252.144 22.9678 C
252.7202 22.9678 253.2959 22.9678 253.8721 22.9678 C
253.8721 20.0879 255.4561 17.1357 256.6802 13.6797 C
256.3198 13.3916 256.0322 13.0322 255.7441 12.6719 C
f530.7119 142.416 m
503.064 142.6318 475.1279 147.2402 448.2002 150.0479 C
447.48 154.2236 446.3281 157.8965 445.1758 161.1357 C
477.792 164.0879 510.624 156.168 540.3604 174.6719 C
552.6719 183.7441 565.0557 193.8242 578.4482 201.5996 C
603.792 214.9922 648 226.4404 674.6396 213.4082 C
677.3037 211.1758 680.832 208.584 684.3604 206.2803 C
665.1357 205.8477 650.6641 206.4961 632.376 202.1758 C
603.8643 194.6162 586.4404 177.6963 568.7998 155.1602 C
558.2158 143.3516 545.6162 142.7764 530.7119 142.416 C
f0 0 0 1 k
213.2642 183.7441 m
184.4639 185.5439 171.144 208.2236 171.144 234.792 C
175.8242 255.8877 198.2158 254.7363 214.4878 246.3115 C
228.3838 237.7441 251.9282 216.2158 243.4321 197.3516 C
236.8799 185.04 225.7202 184.1035 213.2642 183.7441 C
f0 0 0 0 k
217.584 206.6396 m
198.144 209.8799 182.0879 246.4561 209.52 233.4238 C
215.3521 229.6797 228.0962 219.6719 225.0718 210.4561 C
223.5601 207.3604 220.6802 206.6396 217.584 206.6396 C
f687.2402 208.0801 m
681.4082 211.248 675.5762 214.416 669.8164 217.584 C
674.6396 221.04 682.6318 223.7764 688.3203 227.5195 C
727.0557 256.9678 762.8398 298.7275 780.9844 344.0879 C
781.3438 345.3125 783.8643 352.7998 783.6484 353.2324 C
775.3682 349.3438 771.4805 345.6719 765.2881 339.3359 C
765.2158 339.4082 765.1436 339.4805 765.0723 339.5518 C
769.8242 351.5762 776.5195 363.168 782.2803 374.6875 C
801.6484 418.9678 813.0244 458.064 814.3203 506.376 C
813.5996 540.7197 807.9121 571.3198 795.5996 602.856 C
792 610.7041 788.4717 618.48 784.9443 626.2559 C
783.6484 618.48 781.1279 611.4238 780.624 602.5679 C
778.0322 607.752 769.8242 613.3682 768.4561 617.6162 C
764.5684 619.5601 761.1123 625.5361 758.2324 627.6958 C
750.96 634.6079 743.9043 640.6563 735.3359 644.04 C
704.0879 629.7119 673.416 607.1758 647.6396 585.0723 C
653.3281 581.2559 659.1602 577.5122 665.2803 572.832 C
701.7119 540.144 728.7119 478.0801 719.1357 428.1841 C
718.9922 428.1841 718.9199 428.1841 718.8477 428.1841 C
714.7441 437.4722 710.6396 445.248 705.4561 453.0962 C
706.5361 439.8481 707.4004 425.7358 707.6875 412.0557 C
704.3037 346.3916 679.6084 279.2158 637.1279 228.2402 C
628.5596 228.4561 619.5596 228.2402 611.7119 228.5283 C
650.5195 289.5117 670.6084 354.5283 659.3037 426.6719 C
657.3604 434.0879 655.416 441.4321 653.5439 448.7759 C
641.6641 479.4482 625.0322 511.7041 600.1924 532.9438 C
596.3037 535.4639 592.4883 537.9121 588.6719 540.3599 C
589.3203 542.4482 595.6563 546.9839 597.6719 548.7842 C
615.3125 563.3999 634.8965 575.856 651.8164 591.0479 C
692.7842 623.5918 744.5518 662.1118 799.8477 662.1118 C
852.1201 655.6318 871.1279 611.7842 882.2881 564.5518 C
891.8643 507.8159 887.2559 435.96 857.9521 384.6963 C
835.4883 357.2637 818.3516 324.6484 794.4482 298.0801 C
793.9443 297.7197 793.4404 297.3604 792.9355 296.9277 C
792.9355 296.8564 792.9355 296.7842 793.0078 296.6396 C
796.8965 298.0801 800.7842 299.5195 804.6719 300.96 C
807.1201 301.8965 831.6719 313.416 831.8164 313.3438 C
817.9199 290.4482 790.4883 271.0078 769.752 255.3838 C
744.8398 237.8164 716.9043 217.1523 687.8164 208.0801 C
687.5996 208.0801 687.3838 208.0801 687.2402 208.0801 C
f0 0 0 1 k
314.1357 215.0645 m
306.5039 215.8564 303.624 215.9277 298.5122 220.5361 C
287.208 235.2959 295.3438 238.4639 304.7041 249.9121 C
311.9038 259.7041 325.584 280.7998 337.4639 286.2002 C
362.8081 290.8076 362.3042 255.3115 354.0962 239.4717 C
342.2881 222.4082 335.5918 215.0645 314.1357 215.0645 C
f0 0 0 0 k
451.1519 216 m
436.104 218.0879 424.0801 232.6318 414.2158 241.6318 C
413.856 248.5439 413.5679 254.9521 414.144 261.0723 C
431.3521 263.1602 455.9761 236.5918 461.9521 221.6162 C
461.9521 220.6084 461.9521 219.5996 461.9521 218.5918 C
458.064 216.5039 455.2559 216.1436 451.1519 216 C
f316.6563 216.5039 m
304.2002 217.4404 299.52 218.2324 294.9121 229.4639 C
294.5518 231.8398 294.2642 237.3115 296.4238 238.3916 C
296.4238 238.248 296.4238 238.0322 296.4961 237.8164 C
312.8398 236.1602 326.0879 234.5762 340.3438 225.0723 C
334.2959 218.3037 325.2241 216.5039 316.6563 216.5039 C
f0 0 0 1 k
318.0239 226.3682 m
312.2642 227.3037 309.4561 230.4004 310.3198 235.584 C
315.936 235.3682 322.2002 233.1357 328.104 231.1924 C
324.6479 228.168 322.5601 226.3682 318.0239 226.3682 C
f0 0 0 0 k
341.064 226.3682 m
326.5918 235.2959 313.2002 237.3115 297.3599 239.3281 C
309.0239 252.2881 321.7681 275.832 337.1758 284.6162 C
361.6563 289.5117 359.4961 256.6797 353.5918 241.6318 C
350.2798 236.1602 345.8882 231.1924 341.4238 226.3682 C
341.2798 226.3682 341.1357 226.3682 341.064 226.3682 C
f0 0 0 1 k
250.6318 229.1035 m
241.7041 238.9678 234.3599 245.376 222.624 249.2637 C
235.2959 247.8242 244.584 241.7041 250.9922 229.6084 C
250.8481 229.4639 250.7041 229.3203 250.6318 229.1035 C
f0 0 0 0 k
315.7202 230.3281 m
314.9282 230.3281 315.6479 232.6318 Y
316.4399 232.6318 317.2319 232.6318 318.0962 232.6318 C
318.0962 231.9121 318.0962 231.1201 318.168 230.3281 C
317.3042 230.3281 316.5122 230.3281 315.7202 230.3281 C
f0 0 0 1 k
263.0161 234.2158 m
258.48 241.4883 251.208 247.8965 244.5122 251.4238 C
253.9438 249.5518 259.7759 243.8643 263.5918 234.2158 C
263.376 234.2158 263.1602 234.2158 263.0161 234.2158 C
f253.1519 256.3916 m
240.7681 258.2637 237.312 267.4805 237.312 278.0645 C
237.4561 279.3604 237.6001 280.6563 237.7441 281.8799 C
236.4482 282.5283 235.1519 283.1758 233.856 283.8242 C
233.856 284.3281 233.9282 284.832 234 285.2637 C
252.7202 286.9199 267.3359 297.3604 285.9121 299.0156 C
302.6162 295.3438 268.0562 262.4404 265.248 258.9121 C
265.248 258.9844 255.0962 256.3916 253.1519 256.3916 C
f0 0 0 0 k
252.4321 257.9043 m
240.5518 260.2803 237.6719 270.9355 239.3281 281.0156 C
243.936 279.2158 262.0801 265.9678 263.8799 260.4961 C
259.416 258.624 256.896 257.9043 252.4321 257.9043 C
f265.1758 261.5762 m
257.9038 270.5039 246.6001 278.4961 237.3838 283.8242 C
254.52 285.8398 268.9922 296.4961 286.272 297.4316 C
298.2959 293.4717 266.2559 262.3682 265.5361 261.5762 C
265.3921 261.5762 265.248 261.5762 265.1758 261.5762 C
f0 0 0 1 k
150.6958 262.0801 m
143.208 272.8076 148.8242 274.0322 157.8242 282.3838 C
170.7842 291.4561 196.0562 305.7119 209.4482 288.3604 C
216.3599 272.7363 187.6318 277.2002 182.3042 276.5518 C
170.5679 274.6797 158.688 271.0801 150.9121 262.0078 C
150.8398 262.0801 150.7681 262.0801 150.6958 262.0801 C
f252.4321 264.168 m
245.4482 265.1758 244.1519 269.3516 247.1758 274.8242 C
248.4722 274.1035 258.1201 268.3438 258.1201 266.2559 C
255.8882 265.0322 254.4482 264.4561 252.4321 264.168 C
f374.9038 267.1201 m
371.4482 280.0078 366.9121 290.5195 355.896 297.8643 C
355.896 297.9355 355.896 298.0078 355.896 298.0801 C
367.272 291.6719 375.3359 283.6084 375.3359 268.9199 C
375.3359 268.8477 375.0479 266.9756 374.9038 267.1201 C
f0 0 0 0 k
251.9282 267.6963 m
251.5679 267.6963 251.208 267.6963 250.8481 267.6963 C
250.8481 268.416 250.9199 269.1357 250.9922 269.8564 C
251.5679 269.8564 252.2158 269.8564 252.8638 269.7842 C
253.0078 269.208 253.0801 268.8477 252.936 267.6963 C
252.5762 267.6963 252.2158 267.6963 251.9282 267.6963 C
f415.6563 295.6318 m
385.8481 309.7441 368.2798 335.0156 342.8643 353.3037 C
317.4482 367.2002 292.896 367.8477 265.5361 360.7197 C
256.6802 361.1523 248.2559 361.2959 240.2642 361.2236 C
227.1602 360.2881 222.9839 359.7842 222.7681 359.9277 C
224.7119 361.6563 226.6563 363.3125 228.6001 364.9678 C
249.5518 379.6563 266.5439 387.9355 291.96 392.9756 C
283.104 393.4805 275.5439 395.4961 267.5518 396.792 C
286.1279 408.3838 338.1118 407.1602 353.1602 389.0879 C
353.5918 388.3682 354.0239 387.6484 354.4561 386.8564 C
354.8882 387.2158 355.3198 387.5039 355.752 387.792 C
348.9839 397.584 337.3921 400.5361 330.624 410.7598 C
356.9761 413.1357 383.832 382.1035 389.0161 358.0557 C
389.1602 354.5996 389.376 351.1436 389.5918 347.6875 C
390.0962 347.6875 390.6001 347.6875 391.104 347.6875 C
391.104 360.6484 388.8721 366.2637 395.4238 378 C
400.104 370.9443 402.0479 360.0723 404.1357 351.2881 C
407.1602 335.0879 410.04 319.248 413.7842 302.7598 C
414.5039 300.4561 415.2241 298.1523 415.9438 295.8477 C
415.7998 295.7764 415.728 295.7041 415.6563 295.6318 C
f0 0 0 1 k
273.4561 306.2881 m
281.1602 310.1035 291.5278 315.2158 299.9521 308.5195 C
299.8799 308.376 299.8799 308.1602 299.8799 307.9443 C
291.8159 313.0557 275.3281 305.3516 273.4561 306.2881 C
f0 0 0 0 k
336.2402 325.0801 m
327.4561 330.9121 319.9678 330.2637 310.3198 330.4082 C
310.3198 330.9844 310.3198 331.5596 310.3198 332.0645 C
320.1841 332.0645 328.248 332.7119 336.96 326.5195 C
336.96 325.9443 336.6719 325.5117 336.2402 325.0801 C
f0 0 0 1 k
33.48 736.9199 m
37.584 738.2881 38.52 743.1118 38.2319 746.4961 C
39.168 743.5439 37.6558 736.9199 33.48 736.9199 C
f32.04 737.3521 m
26.3521 739.2241 30.2402 748.728 34.416 749.9521 C
40.752 749.9521 37.3682 736.3438 32.04 737.3521 C
f0 0 0 0 k
32.1841 737.6401 m
25.8481 737.6401 33.1919 757.4399 37.584 746.3521 C
37.584 743.2559 36.3599 737.6401 32.1841 737.6401 C
f0 0 0 1 k
22.0322 739.4399 m
21.3838 740.0879 21.6719 747.936 21.6719 748.8721 C
21.8882 748.8721 22.104 748.7998 22.3198 748.728 C
22.1758 739.2959 22.1758 739.2959 22.0322 739.4399 C
f20.8799 739.7998 m
15.9839 745.0562 13.0322 753.8398 9.5762 757.2959 C
9.3599 756.936 9.144 756.5039 8.9282 756.0723 C
8.7842 756.2158 8.7119 756.3599 8.6401 756.4321 C
8.856 757.2241 9.0718 758.0161 9.2881 758.7358 C
9.144 758.8799 9.0718 759.0239 9 759.0962 C
8.5679 758.2319 8.1362 757.2959 7.7759 756.3599 C
1.1519 763.9922 -3.168 778.8242 3.0962 786.3838 C
3.3838 783.2158 4.4639 767.4482 6.48 766.1519 C
6.48 768.96 3.0962 782.6401 4.896 783.2158 C
5.2559 778.0322 5.7598 772.9199 6.9121 767.1602 C
6.9121 774.6479 6.6958 781.7041 6.4082 788.3999 C
7.7041 789.1201 9 789.8398 10.2959 790.5601 C
10.5122 790.1279 10.3682 788.9761 10.8721 788.1841 C
10.9438 788.2559 11.0161 788.2559 11.0879 788.2559 C
11.5918 780.8398 10.2959 767.8799 14.04 760.3921 C
14.04 769.248 12.168 778.9678 11.8799 787.6802 C
11.9521 787.6802 13.4639 767.5918 14.1118 763.9922 C
14.1118 773.7119 13.3921 783.2158 13.752 792.144 C
20.0161 793.6563 20.0161 793.6563 20.376 793.584 C
20.4482 792.8643 20.52 792.0723 20.5918 791.2803 C
20.8799 791.2803 20.8799 801.0723 20.8799 801.144 C
25.7759 801.144 45.0718 791.9277 39.8882 782.856 C
39.5278 782.856 36.0718 778.8242 35.9282 778.3198 C
44.208 769.3921 30.0239 752.832 21.8159 749.5918 C
21.7441 749.4482 21.6719 749.3042 21.6719 749.0879 C
21.6001 749.1602 21.5278 749.2319 21.4561 749.2319 C
21.312 749.1602 21.2402 749.0879 21.168 749.0161 C
21.0239 745.9922 20.9521 742.896 20.8799 739.7998 C
f163.5122 739.7998 m
160.9922 741.96 161.3521 744.6958 163.6563 746.208 C
163.728 746.064 163.7998 745.9199 163.9438 745.7759 C
162.5039 744.3359 162.8638 742.0322 164.0161 739.728 C
163.7998 739.7998 163.6563 739.7998 163.5122 739.7998 C
f168.8398 739.8721 m
169.5601 742.0322 169.7041 743.9038 169.1279 745.6318 C
168.9839 745.7041 168.9121 745.7759 168.8398 745.7759 C
168.7681 745.3438 168.6958 744.8398 168.6958 744.3359 C
168.1201 744.3359 167.9038 745.0562 167.832 745.272 C
164.52 746.9277 164.8799 739.8721 168.3359 742.6079 C
168.3359 742.3921 168.4082 742.104 168.48 741.8159 C
164.7358 739.3682 160.2002 746.208 169.272 746.208 C
170.6401 744.8398 172.0801 740.9521 168.8398 739.8721 C
f57.0239 740.9521 m
55.0078 741.8159 56.6641 744.5518 58.248 744.8398 C
58.896 744.1919 58.9678 743.9761 59.1118 742.0322 C
59.2559 741.96 59.3999 741.8882 59.5439 741.8159 C
60.0479 742.8242 59.6162 744.3359 59.4722 744.6958 C
59.9761 744.6958 62.064 745.1279 62.6401 744.2642 C
63.5762 744.6958 64.584 745.7759 65.376 743.3281 C
65.3042 743.2559 65.2319 743.1841 65.1602 743.04 C
64.6558 743.04 64.1519 743.04 63.7202 742.9678 C
63.792 742.752 63.8638 742.5361 63.936 742.248 C
64.0801 742.1758 64.2241 742.104 64.4399 742.0322 C
64.584 742.248 64.7998 742.3921 65.0161 742.5361 C
65.2319 742.4639 65.4482 742.3198 65.6641 742.1758 C
63.5762 741.168 62.856 740.1602 62.4961 743.4722 C
62.4238 743.5439 62.3521 743.6162 62.2798 743.6162 C
62.208 743.5439 62.1362 743.3999 62.064 743.2559 C
61.9199 743.4722 61.9199 743.4722 61.1279 743.6162 C
61.1279 743.04 61.1279 742.4639 61.1279 741.8159 C
61.2002 741.6719 61.272 741.4561 61.3442 741.2402 C
59.5439 741.2402 59.4722 741.5278 58.6079 740.9521 C
58.248 741.0962 57.8882 741.2402 57.6001 741.3838 C
57.3838 741.2402 57.168 741.0962 57.0239 740.9521 C
f68.3999 740.9521 m
66.6719 741.5278 67.104 743.688 67.0322 744.5518 C
67.1758 744.7681 68.04 745.9922 68.5439 745.7759 C
68.5439 745.4878 68.6162 745.1279 68.688 744.7681 C
69.7681 744.8398 70.8481 744.8398 71.9282 744.8398 C
72.0718 744.6958 72.2881 744.48 72.5039 744.2642 C
74.4482 745.5601 75.0962 744.624 75.312 742.0322 C
75.6001 742.0322 75.312 744.624 77.688 744.9121 C
77.6162 745.2002 77.6162 745.416 77.6162 745.6318 C
77.4722 745.7041 77.3999 745.7759 77.3281 745.7759 C
77.3281 745.9199 77.3281 746.064 77.3281 746.208 C
77.7598 746.208 78.1919 746.208 78.624 746.1357 C
78.7681 744.5518 78.9121 742.9678 79.1279 741.3838 C
77.2559 741.0239 75.6719 741.6719 74.8081 740.9521 C
74.4482 741.0962 74.0879 741.2402 73.728 741.3838 C
73.5122 741.2402 73.3682 741.0962 73.2241 740.9521 C
71.7119 741.6719 72.2881 742.3921 72.792 742.896 C
72.6479 743.2559 72.5039 743.6162 72.3599 743.9761 C
72.144 743.7598 72 743.5439 71.856 743.2559 C
71.6401 743.3999 71.4238 743.5439 71.208 743.688 C
70.8481 743.3281 70.8481 742.4639 71.208 741.312 C
69.6958 741.312 69.2642 741.5278 68.3999 740.9521 C
f88.8481 740.9521 m
86.832 741.96 83.376 741.312 82.2241 741.312 C
82.2959 741.5278 82.3682 741.7441 82.4399 741.96 C
81.6479 741.96 81.8638 741.6001 81.6479 741.2402 C
76.6079 741.2402 81 748.0801 82.2241 743.1118 C
81.6479 743.1118 81.144 743.04 80.6401 742.9678 C
80.7119 742.752 80.7842 742.5361 80.856 742.248 C
81.0718 742.248 81.2881 742.1758 81.5039 742.104 C
81.6479 742.248 81.8638 742.3921 82.0801 742.4639 C
82.1519 742.3921 82.2241 742.3198 82.3682 742.248 C
82.3682 743.1118 82.3682 743.9038 82.3682 744.6958 C
83.4482 744.6958 85.104 744.624 86.832 744.8398 C
87.5518 744.2642 87.48 743.2559 87.5518 741.8159 C
87.624 741.8159 87.6958 741.7441 87.7681 741.6719 C
87.9121 742.248 88.0562 742.752 88.272 743.2559 C
87.3359 744.1919 90.4321 747.144 90.936 742.0322 C
91.0801 742.0322 91.2959 741.96 91.5122 741.8882 C
91.4399 742.8242 91.3682 743.7598 91.2959 744.6958 C
92.1602 744.7681 93.0239 744.8398 93.8882 744.8398 C
94.0322 744.6958 94.1758 744.5518 94.3921 744.3359 C
94.3198 744.9839 94.248 745.5601 94.248 746.1357 C
96.0479 746.1357 95.688 746.064 95.9038 743.6162 C
96.2642 743.688 96.3359 744.1919 96.1919 744.6958 C
96.6958 744.6958 97.2002 744.6958 97.7041 744.6958 C
97.7041 744.624 97.7759 744.5518 97.8481 744.48 C
98.4961 744.7681 98.7842 744.7681 100.0078 744.7681 C
100.1519 744.3359 99.7202 743.5439 100.5122 742.3921 C
100.1519 741.3838 100.0078 741.312 99.2881 740.9521 C
98.7119 741.5278 94.3921 741.3838 94.104 741.3838 C
94.6802 742.248 94.5361 743.3281 94.4639 743.9761 C
94.3921 744.0479 94.3198 744.0479 94.248 744.0479 C
94.104 743.832 93.96 743.5439 93.8882 743.2559 C
93.8159 743.3999 93.7441 743.4722 93.6719 743.5439 C
93.3838 743.5439 93.168 743.5439 92.9521 743.4722 C
92.9521 742.896 92.9521 742.3198 92.9521 741.6719 C
93.0239 741.6001 93.168 741.5278 93.312 741.3838 C
92.52 741.4561 91.728 741.4561 91.0078 741.4561 C
90.792 741.312 90.5762 741.168 90.4321 740.9521 C
89.4238 741.2402 89.2798 741.168 88.8481 740.9521 C
f103.752 741.168 m
101.0161 741.8159 102.0239 745.5601 104.832 744.624 C
105.1919 743.7598 106.1279 741.168 103.752 741.168 C
f111.5278 741.168 m
110.8081 742.8242 110.0879 744.48 109.3682 746.1357 C
110.9521 746.208 112.5361 746.208 114.1919 746.208 C
114.0479 745.272 113.7598 745.416 114.48 743.688 C
115.1279 744.624 114.9121 745.7041 114.8398 746.1357 C
115.272 746.1357 115.7041 746.1357 116.1362 746.1357 C
116.1362 745.7041 115.6318 744.8398 114.2642 741.2402 C
114.1201 741.2402 113.9761 741.2402 113.832 741.168 C
113.4722 742.0322 113.1841 742.8242 112.896 743.6162 C
112.5361 742.8242 112.1758 742.0322 111.8159 741.168 C
111.6719 741.168 111.6001 741.168 111.5278 741.168 C
f129.6719 741.312 m
128.8081 742.3921 127.9438 743.3999 127.1519 744.4082 C
127.0801 743.5439 127.0078 742.6802 127.0078 741.8159 C
127.2241 741.7441 127.4399 741.6719 127.6558 741.6001 C
127.6558 741.5278 127.6558 741.3838 127.6558 741.2402 C
126.5762 741.312 125.4961 741.312 124.416 741.312 C
123.9839 741.96 123.5518 742.5361 123.1201 743.1118 C
123.0479 742.6802 122.9761 742.1758 122.9761 741.6719 C
123.1201 741.6719 123.3359 741.6001 123.5518 741.5278 C
123.48 741.4561 123.4082 741.3838 123.4082 741.2402 C
121.8242 741.2402 120.2402 741.2402 118.6558 741.168 C
118.6558 741.3838 118.6558 741.5278 118.6558 741.6719 C
118.728 741.7441 118.7998 741.8159 118.9438 741.8882 C
118.9438 742.104 118.9438 742.3198 119.0161 742.5361 C
118.4399 742.5361 117.936 742.4639 117.4321 742.3921 C
117.3599 742.3198 117.2881 742.1758 117.2881 742.0322 C
117.5039 741.8159 117.7202 741.6001 117.936 741.312 C
117.2881 741.312 116.6401 741.312 115.9922 741.312 C
117.0718 742.8242 117.936 744.8398 118.5122 746.208 C
118.584 746.208 118.6558 746.208 118.728 746.208 C
119.376 744.7681 120.0239 743.3281 120.6719 741.8882 C
120.8882 741.8882 121.104 741.8159 121.3921 741.7441 C
121.3921 743.04 121.3921 744.3359 121.4639 745.6318 C
121.248 745.7759 121.0322 745.8481 120.8882 745.9199 C
120.8882 746.4238 123.1919 746.208 124.0562 746.208 C
127.3682 744.9121 122.688 742.752 126.2881 741.8882 C
127.0078 742.6079 126.5039 744.3359 126.4321 745.416 C
126.2158 745.5601 126.0718 745.7041 125.9282 745.7759 C
125.9282 745.9199 125.9282 746.064 125.9282 746.208 C
126.4321 746.208 126.936 746.208 127.5122 746.208 C
128.0879 745.4878 128.6641 744.7681 129.312 744.0479 C
129.312 744.624 129.312 745.1279 129.312 745.6318 C
129.168 745.7041 129.0962 745.7759 129.0239 745.7759 C
129.0239 745.9199 129.0239 746.064 129.0962 746.208 C
130.9678 746.208 132.8398 746.208 134.7119 746.208 C
134.6401 745.7041 134.6401 745.1279 134.6401 744.5518 C
134.5679 744.5518 134.4961 744.48 134.4238 744.4082 C
134.208 744.6958 134.064 744.9839 133.9199 745.272 C
133.8481 744.2642 133.8481 743.2559 133.8481 742.248 C
133.6318 742.248 133.416 742.248 133.272 742.248 C
133.272 742.6802 133.0562 743.04 132.8398 743.2559 C
132.7681 742.8242 132.6958 742.3921 132.6958 741.8882 C
133.1279 741.96 133.6318 742.0322 134.1362 742.104 C
134.2798 742.3921 134.4238 742.6802 134.5679 742.896 C
134.7119 742.9678 134.856 742.9678 135.0718 742.9678 C
135.0718 742.5361 135.0718 742.0322 135.0718 741.5278 C
136.0801 742.0322 135.6479 745.272 135.5762 745.7041 C
135.3599 745.7759 135.2158 745.8481 135.0718 745.9199 C
135.0718 746.7119 138.5278 746.7119 139.6802 744.7681 C
139.3921 744.2642 139.104 743.7598 138.8159 743.2559 C
139.3921 742.3921 140.3281 741.6719 140.1118 741.2402 C
139.5361 741.312 139.0322 741.3838 138.5278 741.3838 C
138.0962 741.96 137.6641 742.4639 137.3042 742.9678 C
137.2319 742.5361 137.2319 742.104 137.2319 741.6719 C
137.376 741.6719 137.52 741.6719 137.7358 741.6001 C
137.7358 741.5278 137.7358 741.4561 137.8081 741.3838 C
135.3599 741.3838 132.9839 741.3838 130.6079 741.312 C
131.6162 741.96 131.1841 744.7681 131.1841 745.6318 C
130.752 745.7041 130.752 745.7041 130.1758 745.416 C
130.104 744.0479 130.104 742.6079 130.104 741.168 C
129.8159 741.0962 129.8159 741.0962 129.6719 741.312 C
f153.7202 741.168 m
148.9678 741.168 151.6318 749.4482 155.8799 745.2002 C
156.7441 743.04 155.6641 741.6719 153.7202 741.168 C
f156.6719 741.168 m
156.6001 741.8159 156.5278 742.4639 156.5278 743.1118 C
156.6001 743.1841 156.6719 743.2559 156.7441 743.2559 C
156.8882 742.9678 157.248 741.6719 158.6162 741.96 C
158.6162 742.1758 158.6162 742.3921 158.688 742.5361 C
157.9678 743.04 157.3198 743.5439 156.6719 744.0479 C
156.6001 744.624 156.6001 745.1279 156.6001 745.6318 C
157.3921 746.4238 158.04 746.1357 159.48 746.208 C
159.5518 745.7041 159.6958 745.1279 159.8398 744.5518 C
159.624 744.5518 159.4082 744.48 159.1919 744.4082 C
158.9038 745.9199 158.3281 745.4878 157.752 745.4878 C
157.752 745.3438 157.752 745.2002 157.752 744.9839 C
160.272 743.04 161.208 741.5278 156.6719 741.168 C
f184.1758 741.168 m
183.7441 741.3838 183.312 741.5278 182.9521 741.6719 C
182.9521 742.248 182.9521 742.8242 183.0239 743.3281 C
183.3838 743.6162 183.2402 743.9038 V
183.0239 743.9038 182.8081 743.9038 182.6641 743.832 C
181.9438 741.8882 181.0801 741.5278 179.4961 741.2402 C
179.4238 741.312 179.4238 741.3838 179.4238 741.4561 C
180.144 741.8159 180.6479 742.248 180.936 742.6802 C
180.144 743.04 180.144 743.04 179.4961 743.688 C
178.416 742.3921 178.2002 741.0239 176.1841 741.3838 C
176.832 741.6719 177.2642 742.248 177.624 742.752 C
175.6079 744.2642 175.4639 744.3359 176.9038 746.208 C
177.3359 746.208 177.8398 746.208 178.3438 746.208 C
178.5601 745.9199 178.9199 745.4878 179.4961 745.2002 C
179.7842 745.5601 180.0718 745.9199 180.3599 746.208 C
180.792 746.208 181.2959 746.208 181.7998 746.208 C
182.3042 745.5601 182.3042 745.5601 182.7358 744.4082 C
183.0962 746.2803 182.9521 746.208 185.1841 746.208 C
185.6162 745.7759 185.688 745.5601 186.0479 744.7681 C
185.3999 743.9761 185.4722 743.9761 186.1201 742.6079 C
185.688 741.7441 185.1841 741.168 184.1758 741.168 C
f0 0 0 0 k
20.0161 741.2402 m
14.1118 747.144 11.52 754.416 8.6401 761.1841 C
8.4238 761.1841 8.2798 761.1118 8.1362 761.04 C
7.7041 760.104 7.3442 759.168 6.9839 758.1602 C
6.8398 758.1602 6.7681 758.0879 6.6958 758.0161 C
1.6558 764.7842 -2.7358 779.3999 2.7358 785.6641 C
3.7441 780.624 2.5918 768.6719 7.2002 765 C
7.2002 772.9922 7.0562 780.9839 6.7681 788.1841 C
8.064 788.9761 9 789.624 10.2959 790.0562 C
10.7998 779.3999 10.2959 769.896 14.4722 759.312 C
14.4722 770.04 13.752 781.5601 14.1118 791.9277 C
16.1279 792.4321 18.144 792.8643 20.2319 793.2959 C
20.1602 775.9438 20.0879 758.5918 20.0161 741.2402 C
f0 0 0 1 k
105.5518 741.312 m
105.6958 742.248 105.8398 743.1841 105.9839 744.0479 C
105.8398 744.1201 105.6958 744.1919 105.5518 744.1919 C
105.7681 744.8398 105.9839 745.416 106.2002 745.9922 C
106.9199 746.2803 107.4961 746.4961 108.792 745.5601 C
108.3599 745.3438 108 744.7681 107.9282 744.9121 C
107.7119 744.9121 107.5679 744.9121 107.4238 744.9121 C
107.4961 744.6958 107.5679 744.48 107.6401 744.1919 C
107.4961 744.1201 107.4238 744.0479 107.3521 743.9761 C
107.4238 743.1118 107.4961 742.1758 107.5679 741.2402 C
106.8481 741.312 106.2002 741.312 105.5518 741.312 C
f141.6958 741.168 m
141.6958 741.3838 141.6958 741.5278 141.6958 741.6719 C
141.8398 741.7441 141.9839 741.8159 142.2002 741.8159 C
143.7842 746.7119 138.8882 746.208 144.936 746.208 C
145.5122 745.9199 146.1602 744.9121 145.584 743.688 C
146.0879 743.1118 146.0879 743.1118 146.3042 742.3921 C
145.2959 741.0962 142.9199 741.2402 141.6958 741.168 C
f146.1602 741.312 m
146.52 742.896 147.0239 744.2642 146.5918 745.7041 C
146.4482 745.7759 146.3042 745.8481 146.1602 745.9199 C
146.1602 748.0078 153.0718 745.0562 149.9038 743.4722 C
149.9038 743.2559 151.2002 741.8882 151.2002 741.2402 C
150.624 741.312 150.1201 741.312 149.6162 741.312 C
149.1841 741.96 148.752 742.5361 148.3198 743.1118 C
148.248 742.6802 148.1758 742.1758 148.1758 741.6719 C
148.3198 741.6719 148.5361 741.6001 148.752 741.5278 C
148.6802 741.4561 148.6802 741.3838 148.6802 741.2402 C
147.8159 741.312 146.9521 741.312 146.1602 741.312 C
f173.0161 741.312 m
173.2319 741.5278 173.4482 741.7441 173.6641 741.8882 C
173.5918 742.9678 173.5918 744.0479 173.5918 745.0562 C
173.52 744.9839 173.4482 744.9121 173.376 744.7681 C
173.2319 744.9839 173.1602 745.2002 173.0879 745.416 C
173.8799 745.7759 173.8081 746.1357 174.96 746.1357 C
174.96 744.6958 175.0322 743.2559 175.104 741.8159 C
175.3198 741.6719 175.5361 741.5278 175.8242 741.3838 C
174.8882 741.3838 173.9521 741.3838 173.0161 741.312 C
f0 0 0 0 k
85.8242 741.7441 m
85.752 744.0479 85.896 744.8398 86.2559 742.248 C
86.1118 742.104 85.9678 741.96 85.8242 741.7441 C
f83.8799 741.8159 m
83.8799 742.4639 83.8799 743.1118 83.9521 743.688 C
84.0239 743.7598 84.0962 743.832 84.168 743.832 C
84.168 743.1841 84.2402 742.5361 84.312 741.8882 C
84.168 741.8882 84.0239 741.8882 83.8799 741.8159 C
f97.7041 741.8882 m
97.1279 742.752 96.8398 743.2559 96.8398 743.688 C
97.416 744.2642 97.2002 743.9761 97.9922 744.1919 C
97.9922 743.9761 97.7759 743.2559 98.2798 742.752 C
98.1362 742.4639 98.064 742.1758 97.9922 741.8882 C
97.8481 741.8882 97.7759 741.8882 97.7041 741.8882 C
f98.7842 741.8882 m
98.7119 742.104 98.6401 742.3198 98.6401 742.5361 C
98.7842 742.3198 99 742.104 99.2158 741.8882 C
99.0718 741.8882 98.9282 741.8882 98.7842 741.8882 C
f103.6079 741.8159 m
103.6079 742.6079 103.6079 743.3281 103.6079 744.0479 C
103.752 744.0479 103.896 744.0479 104.1118 744.0479 C
104.04 743.3999 104.04 742.752 104.04 742.0322 C
103.896 741.96 103.752 741.8882 103.6079 741.8159 C
f153.3599 741.8882 m
152.5679 741.8882 152.064 745.0562 154.1519 745.5601 C
154.5122 744.8398 155.3042 741.8882 153.3599 741.8882 C
f184.104 741.8882 m
184.0322 742.248 183.96 742.6079 183.96 742.9678 C
184.104 742.9678 184.248 742.9678 184.4639 742.896 C
184.4639 742.6079 184.4639 742.248 184.5361 741.8882 C
184.3921 741.8882 184.248 741.8882 184.104 741.8882 C
f77.04 741.96 m
76.9678 742.6802 76.9678 743.3999 76.9678 744.0479 C
77.1118 744.0479 77.3281 744.0479 77.5439 743.9761 C
77.5439 743.3999 77.5439 742.8242 77.6162 742.248 C
77.3999 742.1758 77.1841 742.104 77.04 741.96 C
f143.7119 741.8882 m
143.7119 742.4639 143.7842 742.9678 143.856 743.4722 C
144 743.3999 144.144 743.3281 144.3599 743.2559 C
144.3599 742.9678 144.4321 742.6079 144.5039 742.248 C
144.2158 742.1758 143.9282 742.0322 143.7119 741.8882 C
f68.688 742.0322 m
68.688 742.752 68.688 743.3999 68.688 744.0479 C
68.9038 744.1201 69.1201 744.1919 69.4082 744.1919 C
69.4082 743.5439 69.4082 742.896 69.4082 742.1758 C
69.1919 742.248 69.0479 742.248 68.9038 742.248 C
68.832 742.1758 68.7598 742.104 68.688 742.0322 C
f117.936 743.1118 m
117.936 743.6162 117.936 743.6162 118.1519 743.832 C
118.2959 743.688 118.4399 743.4722 118.584 743.2559 C
118.3682 743.2559 118.1519 743.1841 117.936 743.1118 C
f112.0322 743.6162 m
111.6001 744.6958 111.168 744.9839 111.3838 745.6318 C
111.6001 745.7041 111.8159 745.7041 112.0322 745.7041 C
112.3198 745.2002 112.6802 744.8398 112.3198 743.688 C
112.1758 743.688 112.104 743.688 112.0322 743.6162 C
f177.6958 743.688 m
177.624 744.2642 177.5518 744.8398 177.5518 745.416 C
177.6958 745.0562 177.9121 744.6958 177.9121 743.688 C
177.8398 743.688 177.7681 743.688 177.6958 743.688 C
f180.936 743.7598 m
180.8638 744.3359 180.792 744.9121 180.7202 745.416 C
180.8638 745.416 181.0078 745.416 181.2241 745.416 C
181.2241 745.2002 181.1519 743.5439 180.936 743.7598 C
f122.9761 744.0479 m
122.9761 744.624 122.9761 745.1279 122.9761 745.6318 C
123.1919 745.5601 123.48 745.4878 123.7681 745.416 C
123.8398 744.3359 123.9121 744.2642 122.9761 744.0479 C
f132.6958 744.0479 m
132.6958 744.624 132.6958 745.1279 132.6958 745.6318 C
132.9839 745.6318 133.272 745.6318 133.6318 745.5601 C
133.416 745.2002 133.3438 744.48 132.6958 744.0479 C
f137.2319 744.0479 m
137.2319 744.624 137.3042 745.1279 137.376 745.6318 C
137.5918 745.5601 137.8081 745.416 138.0239 745.272 C
138.0239 744.9839 138.0239 744.6958 138.0239 744.3359 C
137.7358 744.2642 137.4482 744.1919 137.2319 744.0479 C
f148.1758 744.0479 m
148.1758 744.624 148.1758 745.1279 148.1758 745.6318 C
148.4639 745.5601 148.752 745.4878 149.04 745.416 C
149.04 744.3359 149.1118 744.2642 148.1758 744.0479 C
f143.7119 744.1919 m
143.7119 744.6958 143.7842 745.2002 143.856 745.6318 C
144 745.5601 144.144 745.416 144.3599 745.272 C
144.2881 744.9839 144.2881 744.6958 144.2881 744.3359 C
144.0718 744.3359 143.856 744.2642 143.7119 744.1919 C
f184.4639 744.624 m
184.1758 744.9839 184.1758 744.9839 184.1758 745.4878 C
184.752 745.4878 184.896 744.9839 184.6802 744.624 C
184.6079 744.624 184.5361 744.624 184.4639 744.624 C
f0 0 0 1 k
97.4878 748.4399 m
97.7041 748.728 97.9199 749.0161 98.208 749.2319 C
97.4878 749.5918 97.2002 749.8081 97.4878 750.0962 C
96.3359 749.8081 95.1841 749.52 94.0322 749.2319 C
94.0322 749.9521 94.0322 750.6719 94.104 751.3921 C
94.6079 750.4561 94.3198 750.312 95.9038 750.0239 C
95.9761 750.2402 96.0479 750.4561 96.1919 750.6001 C
93.312 752.6162 92.5918 754.6318 96.8398 754.272 C
96.9121 753.7681 96.9839 753.1919 97.1279 752.6162 C
96.9121 752.688 96.7681 752.688 96.624 752.688 C
96.48 753.0479 96.3359 753.3359 96.1919 753.624 C
95.832 753.6958 95.4722 753.7681 95.1118 753.7681 C
94.9678 753.6958 94.896 753.5518 94.8242 753.4082 C
95.688 752.5439 96.48 752.5439 97.7041 750.6719 C
97.9922 750.7441 98.2798 750.7441 98.5679 750.7441 C
98.856 750.3838 99.144 750.0239 99.4321 749.5918 C
99.2158 749.5918 99.0718 749.52 98.9282 749.4482 C
98.7119 748.7998 98.4238 748.2241 97.4878 748.4399 C
f130.896 748.4399 m
131.1118 748.728 131.3281 749.0161 131.6162 749.2319 C
131.04 749.376 130.8242 749.8081 130.752 750.2402 C
130.3921 749.0161 128.9521 749.2319 128.52 749.2319 C
128.376 751.3198 128.376 751.3198 128.1602 751.752 C
127.728 751.752 127.3682 751.752 127.0078 751.752 C
126.936 751.1758 126.936 750.6001 126.936 749.9521 C
127.0078 749.8799 127.0801 749.8081 127.2241 749.7358 C
127.1519 749.6641 127.1519 749.5918 127.1519 749.4482 C
126.5039 749.52 125.856 749.5918 125.208 749.5918 C
125.2798 749.8081 125.3521 749.9521 125.4961 750.0962 C
124.6318 750.2402 124.8481 749.8799 124.7041 749.4482 C
123.2642 749.4482 122.9761 749.8799 122.3281 749.9521 C
122.04 749.7358 121.752 749.52 121.5361 749.3042 C
121.248 749.376 120.96 749.4482 120.6719 749.52 C
120.6001 749.6641 120.5278 749.8081 120.4561 749.9521 C
118.7998 749.9521 119.0161 748.9438 117.2158 749.8081 C
116.2798 749.376 114.9121 749.2319 114.624 749.2319 C
114.624 749.5918 113.9038 749.5918 Y
113.7598 750.312 114.1201 750.96 114.3359 751.1758 C
114.1201 751.4639 113.9038 751.6802 113.688 751.896 C
113.3999 751.6079 113.04 751.752 112.6079 751.8242 C
111.8159 751.0322 112.752 750.7441 112.752 749.4482 C
109.728 749.4482 106.7041 749.4482 103.752 749.376 C
103.6802 749.5918 103.6079 749.7358 103.6079 749.8799 C
102.7441 749.3042 102.0239 749.376 101.4482 749.4482 C
100.5122 751.3198 100.728 751.6802 101.6641 752.9038 C
102.168 752.9038 102.6719 752.9038 103.248 752.9038 C
103.4639 752.6162 103.6802 752.3281 103.9678 752.04 C
103.9678 753.2642 104.04 753.624 103.752 754.272 C
104.1841 754.3438 104.688 754.3438 105.1919 754.3438 C
105.2642 753.9121 105.3359 753.48 105.4082 752.9761 C
107.208 752.9761 106.9199 752.6162 107.1362 749.9521 C
107.208 749.9521 107.3521 749.9521 107.4961 749.9521 C
107.5679 750.312 107.6401 750.6719 107.7119 750.96 C
107.7842 751.0322 107.9282 751.104 108.0718 751.1758 C
107.2798 751.5361 107.7119 752.3999 107.7119 752.4722 C
108.3599 752.9038 108.7202 752.9761 110.0879 752.832 C
110.2319 751.9678 110.376 751.104 110.52 750.2402 C
110.5918 750.2402 110.6641 750.168 110.8081 750.0962 C
111.5278 750.8159 111.0962 751.752 111.0962 752.3999 C
110.6641 752.3999 110.8799 752.7598 110.9521 752.9038 C
112.4639 752.9038 114.4082 753.0479 116.3521 752.832 C
116.4961 751.9678 116.6401 751.104 116.856 750.2402 C
116.9282 750.312 117 750.312 117.144 750.312 C
117.144 753.4082 118.8721 753.1201 121.5361 753.9839 C
121.6079 753.6958 121.6802 753.3359 121.752 752.9761 C
121.896 752.9761 122.1118 752.9761 122.3281 752.9761 C
122.3281 752.832 122.3999 752.6162 122.4722 752.3999 C
123.624 753.1201 125.1362 753.4082 125.1362 751.104 C
124.5601 751.0322 124.0562 750.96 123.5518 750.8882 C
123.624 750.7441 123.6958 750.6001 123.7681 750.3838 C
124.5601 750.3838 124.6318 750.8159 125.7119 750.4561 C
125.7119 751.6079 125.3521 752.6162 125.3521 752.9038 C
126.2158 752.9038 127.0801 752.9038 128.0161 752.9038 C
128.8081 752.9038 129.6001 752.9038 130.3921 752.832 C
130.6079 751.752 130.3198 751.8242 130.896 750.6001 C
131.2559 750.6719 131.6162 750.7441 132.0479 750.7441 C
132.48 750.168 132.2642 749.4482 131.9761 748.4399 C
131.6162 748.4399 131.2559 748.4399 130.896 748.4399 C
f151.2002 749.1602 m
150.7681 749.2319 150.3359 749.2319 149.9761 749.2319 C
149.9038 749.5918 149.832 749.9521 149.7598 750.2402 C
147.0239 748.0078 146.52 750.8159 147.312 752.7598 C
147.8882 752.832 148.4639 752.832 149.1118 752.832 C
149.3999 752.5439 149.6162 752.5439 149.9761 752.5439 C
150.0479 752.688 150.1201 752.7598 150.1919 752.832 C
150.6958 752.9038 151.2002 752.9038 151.7759 752.9038 C
152.208 751.9678 151.7041 748.0801 151.2002 749.1602 C
f192.96 749.1602 m
192.0239 749.4482 191.8799 750.0962 191.3042 750.0962 C
190.2959 748.584 188.856 749.8799 188.4961 749.9521 C
188.2798 749.7358 188.064 749.52 187.9199 749.3042 C
186.3359 749.52 186.4082 749.7358 185.3999 749.2319 C
185.3999 750.2402 179.064 747.6479 178.0562 751.752 C
177.9839 751.6802 177.9121 751.6079 177.8398 751.5361 C
177.7681 751.6802 177.6958 751.752 177.624 751.8242 C
177.4082 751.8242 177.1919 751.8242 176.9761 751.752 C
176.9761 751.3921 177.2642 750.2402 177.1201 749.4482 C
176.4722 749.52 175.8242 749.52 175.1758 749.52 C
175.896 750.96 175.1758 752.6162 175.3198 752.9038 C
177.1919 752.9038 180.6479 753.8398 181.0801 751.0322 C
180.5039 751.0322 180 751.0322 179.4961 751.0322 C
179.5679 750.8159 179.6401 750.6001 179.7119 750.312 C
180.3599 750.312 180.8638 750.7441 181.4399 750.6001 C
181.2959 751.8242 181.2241 753.0479 181.1519 754.272 C
181.584 754.3438 182.0161 754.3438 182.52 754.3438 C
182.5918 752.9038 182.7358 751.4639 182.8799 749.9521 C
183.312 751.3198 183.168 751.3198 183.168 752.3999 C
186.7681 754.7759 184.9678 750.2402 186.6958 749.9521 C
186.6958 750.7441 186.6958 751.5361 186.6958 752.2559 C
186.48 752.3281 186.2642 752.3999 186.1201 752.4722 C
186.48 752.9761 186.9121 753.48 187.3438 753.9839 C
187.416 753.9839 187.5601 753.9839 187.7041 753.9839 C
187.7759 753.6958 187.8481 753.3359 187.9199 752.9761 C
188.6401 752.9038 190.3682 753.2642 191.3042 752.3281 C
192.0239 752.5439 192.312 752.9038 193.4639 753.0479 C
193.4639 753.7681 193.1758 754.0562 193.1758 754.3438 C
193.6079 754.3438 194.1118 754.3438 194.6162 754.3438 C
195.0479 753.9121 194.6162 751.248 195.0479 749.5918 C
194.3281 749.4482 193.6079 749.3042 192.96 749.1602 C
f203.9038 749.1602 m
201.3838 749.9521 202.104 752.688 204.4082 753.0479 C
204.4082 753.7681 204.1201 754.0562 204.1201 754.3438 C
204.5518 754.3438 204.9839 754.3438 205.4878 754.3438 C
205.5601 752.9761 205.6318 751.5361 205.7759 750.0962 C
205.9199 750.0962 206.1362 750.0962 206.3521 750.0962 C
206.2798 751.0322 206.208 751.9678 206.1362 752.832 C
206.7119 753.1201 206.4961 753.9839 206.4961 754.272 C
209.3042 754.272 206.208 751.4639 208.0801 749.5918 C
206.6401 749.4482 205.272 749.3042 203.9038 749.1602 C
f23.3999 749.2319 m
23.3999 749.376 31.1758 756.3599 32.5439 757.8721 C
36.3599 763.0562 42.0479 770.1841 38.0879 776.52 C
37.2241 777.3838 36.792 777.7441 36.6479 778.3198 C
40.248 782.856 44.3521 786.0962 39.3838 791.064 C
39.3838 791.1357 39.4561 791.208 39.5278 791.2803 C
46.2959 787.248 39.0239 781.7041 37.1519 777.96 C
47.3042 765.4321 23.4722 749.0879 23.3999 749.2319 C
f138.8159 749.2319 m
137.1602 749.7358 135.2881 749.52 134.1362 749.52 C
134.6401 750.5278 134.208 752.3281 134.208 752.9038 C
135.144 752.9038 136.0801 752.9038 137.0161 752.9038 C
137.2319 751.896 137.4482 750.8882 137.7358 749.8799 C
138.4561 751.752 137.8799 751.3198 138.0962 752.4722 C
138.7441 752.9038 139.104 752.9761 140.4722 752.832 C
140.688 752.6162 140.7598 751.1758 140.832 750.2402 C
140.9761 750.312 141.1919 750.312 141.4082 750.312 C
141.3359 751.1758 141.2642 752.04 141.2642 752.832 C
142.8481 752.832 144.5039 752.832 146.1602 752.7598 C
146.3042 751.6802 146.4482 750.6001 146.6641 749.4482 C
143.9282 749.4482 141.0479 749.6641 138.8159 749.2319 C
f162.5762 749.1602 m
159.8398 749.8081 160.9199 752.5439 163.1519 753.1919 C
163.0801 753.4082 163.0078 753.624 163.0078 753.8398 C
162.5762 753.8398 162.792 754.2002 162.792 754.3438 C
163.2241 754.3438 163.728 754.3438 164.2319 754.3438 C
164.3042 752.9761 164.376 751.5361 164.4482 750.0962 C
164.52 750.0239 164.6641 749.9521 164.8081 749.8799 C
164.7358 749.8081 164.7358 749.6641 164.7358 749.52 C
164.0161 749.4482 163.2959 749.3042 162.5762 749.1602 C
f168.9121 749.2319 m
168.9121 749.52 166.752 749.5918 166.6802 749.5918 C
166.6802 750.5278 166.6802 751.4639 166.6802 752.3999 C
168.9839 753.9121 169.2002 752.688 169.5601 750.2402 C
169.6318 750.2402 169.7041 750.168 169.7759 750.0962 C
169.8481 750.168 169.9199 750.2402 170.064 750.312 C
169.9199 751.6802 169.8481 753.0479 169.7759 754.3438 C
174.168 754.3438 173.0879 754.9199 173.3042 749.9521 C
173.376 749.8799 173.4482 749.8081 173.5918 749.7358 C
173.52 749.6641 173.52 749.5918 173.52 749.4482 C
171.936 749.376 170.4238 749.3042 168.9121 749.2319 C
f51.2642 749.3042 m
49.6079 749.3042 49.248 750.3838 48.7441 750.96 C
48.6001 750.4561 48.4561 749.9521 48.3838 749.4482 C
46.9438 749.4482 45.5039 749.4482 44.1362 749.376 C
44.1362 749.5918 44.208 749.7358 44.2798 749.8799 C
44.4238 749.9521 44.5679 750.0239 44.7119 750.0962 C
44.6401 751.3921 44.6401 752.688 44.6401 753.9121 C
44.4238 753.9839 44.2798 754.0562 44.1362 754.1279 C
44.1362 754.6318 46.2959 754.416 46.9438 754.416 C
46.9438 754.1279 46.3682 753.624 46.2241 753.5518 C
46.2241 752.3999 46.2241 751.1758 46.2241 749.9521 C
47.5918 750.168 47.6641 750.3838 48.2402 751.3921 C
48.3838 751.3921 48.5278 751.3198 48.7441 751.248 C
48.7441 754.9199 51.48 755.1357 53.7842 752.832 C
54.5039 753.1201 54.7202 754.0562 55.6558 754.3438 C
62.4238 754.3438 56.9521 745.3438 53.856 751.5361 C
53.4238 750.168 52.5601 749.52 51.2642 749.3042 C
f63 749.376 m
62.1362 750.4561 61.3442 751.4639 60.5518 752.4722 C
60.5518 751.6802 60.5518 750.8159 60.5518 749.9521 C
60.6958 749.8799 60.9121 749.7358 61.1279 749.5918 C
60.4082 749.5918 59.688 749.5918 59.04 749.52 C
59.832 751.104 59.688 752.1841 59.6162 753.6958 C
59.4722 753.7681 59.3281 753.8398 59.1841 753.9121 C
59.1841 754.0562 59.1841 754.2002 59.1841 754.3438 C
61.1279 754.3438 60.9121 754.2002 62.7842 752.1118 C
62.7119 752.688 62.6401 753.2642 62.6401 753.8398 C
62.4961 753.9121 62.4238 753.9121 62.3521 753.9121 C
62.2798 754.0562 62.2798 754.2002 62.2798 754.3438 C
64.1519 754.416 66.0962 754.416 68.04 754.416 C
67.9678 753.9121 67.9678 753.3359 67.9678 752.7598 C
67.896 752.7598 67.8242 752.688 67.752 752.6162 C
67.5361 752.9761 67.3198 753.3359 67.104 753.624 C
66.7441 753.6958 66.3838 753.6958 66.0239 753.6958 C
66.0239 753.2642 66.0239 752.7598 66.0962 752.2559 C
66.312 752.6162 66.6001 752.9761 66.8882 753.3359 C
66.8882 752.4722 66.96 751.5361 67.0322 750.6001 C
66.96 750.6001 66.8882 750.5278 66.8159 750.4561 C
66.6001 750.8159 66.3838 751.1758 66.168 751.5361 C
66.0962 751.0322 66.0239 750.5278 66.0239 749.9521 C
67.0322 750.0962 67.3198 750.312 67.9678 751.104 C
68.04 751.104 68.1841 751.104 68.3281 751.104 C
68.2559 750.6001 68.1841 750.0239 68.1118 749.4482 C
66.7441 749.4482 65.376 749.4482 64.0078 749.376 C
64.0078 750.7441 65.376 752.1841 64.2241 753.9121 C
64.0078 753.8398 63.792 753.6958 63.5762 753.5518 C
63.5039 752.1841 63.4321 750.8159 63.4321 749.376 C
63.2881 749.376 63.144 749.376 63 749.376 C
f88.272 749.376 m
87.4082 750.4561 86.5439 751.4639 85.752 752.4722 C
85.752 751.6802 85.752 750.8159 85.752 749.9521 C
85.8242 749.9521 85.896 749.9521 86.04 749.8799 C
86.04 749.7358 86.04 749.5918 86.04 749.4482 C
85.3921 749.4482 84.8159 749.4482 84.2402 749.376 C
84.2402 749.5918 84.2402 749.7358 84.312 749.8799 C
84.4561 749.9521 84.6001 750.0239 84.8159 750.0962 C
84.7441 751.3198 84.7441 752.5439 84.7441 753.6958 C
84.4561 753.6958 84.168 753.6958 83.8799 753.6958 C
83.7358 752.4722 83.5918 751.1758 83.4482 749.8799 C
79.272 747.0723 80.208 753.0479 79.9199 753.9121 C
79.7759 753.9121 79.6318 753.9121 79.4878 753.9121 C
79.416 753.5518 79.416 753.1919 79.416 752.832 C
79.272 752.832 79.2002 752.832 79.1279 752.7598 C
78.6958 753.4082 78.5518 753.5518 78.0479 753.6958 C
78.0479 752.4722 78.0479 751.248 78.1201 749.9521 C
78.2642 749.8799 78.4082 749.7358 78.624 749.5918 C
77.688 749.52 76.752 749.4482 75.8882 749.376 C
75.8882 750.8882 76.5361 752.2559 76.6079 753.6958 C
76.3198 753.6958 76.0322 753.624 75.7441 753.5518 C
75.6719 753.3359 75.6001 753.0479 75.6001 752.7598 C
75.3838 752.832 75.2402 752.9038 75.0962 752.9761 C
75.0962 753.48 75.0962 753.9839 75.168 754.416 C
77.4722 754.416 79.7759 754.416 82.0801 754.3438 C
82.0801 754.272 82.1519 754.2002 82.2241 754.0562 C
82.0078 754.0562 81.792 753.9839 81.6479 753.9121 C
81.5762 752.7598 81.5762 751.5361 81.5762 750.312 C
81.8638 750.312 82.2241 750.2402 82.584 750.168 C
82.6558 750.2402 82.7998 750.312 82.9438 750.3838 C
82.9438 751.5361 82.9438 752.688 83.0161 753.8398 C
82.7998 753.9121 82.584 753.9839 82.4399 754.0562 C
82.4399 754.2002 82.5122 754.272 82.584 754.3438 C
83.7358 754.3438 84.96 754.3438 86.1841 754.272 C
86.7598 753.5518 87.3359 752.832 87.9121 752.1118 C
87.9121 752.7598 87.9121 753.3359 87.9121 753.9121 C
87.6958 753.9839 87.5518 754.0562 87.4082 754.0562 C
87.4082 754.2002 87.48 754.272 87.5518 754.3438 C
89.4238 754.3438 91.2959 754.3438 93.168 754.3438 C
93.168 753.7681 93.2402 753.1919 93.312 752.6162 C
92.8081 752.7598 92.8081 752.7598 92.4482 753.1919 C
92.376 752.3281 92.3042 751.4639 92.2319 750.6001 C
91.728 750.312 91.3682 751.3921 91.3682 751.5361 C
91.2959 751.0322 91.2241 750.5278 91.2241 749.9521 C
91.584 750.0239 92.0161 750.0962 92.4482 750.168 C
92.8081 750.8882 92.7358 750.96 93.5278 751.1758 C
93.4561 750.6001 93.3838 750.0239 93.312 749.4482 C
91.9438 749.4482 90.5762 749.4482 89.208 749.376 C
89.208 749.5918 89.208 749.7358 89.2798 749.8799 C
89.4238 749.9521 89.5679 750.0239 89.7119 750.0962 C
89.6401 751.3198 89.6401 752.5439 89.6401 753.6958 C
89.4961 753.7681 89.3521 753.8398 89.208 753.9121 C
88.9922 753.8398 88.7759 753.6958 88.6318 753.5518 C
88.5601 752.1841 88.5601 750.8159 88.5601 749.376 C
88.416 749.376 88.3442 749.376 88.272 749.376 C
f155.0161 749.3042 m
154.728 749.4482 154.5122 749.52 154.2959 749.5918 C
154.2241 749.9521 154.2241 750.312 154.2241 750.6001 C
154.3682 750.8159 154.5122 751.0322 154.728 751.1758 C
154.1519 751.752 154.4399 752.3281 154.4399 752.6162 C
156.7441 753.9839 156.8159 752.2559 157.1758 750.168 C
157.3198 750.2402 157.4639 750.312 157.6802 750.312 C
157.5361 751.1758 157.4639 752.04 157.3921 752.9038 C
162.8638 752.9038 158.3999 753.2642 161.1362 749.5918 C
159.5518 749.52 156.0962 749.6641 155.0161 749.3042 C
f209.4482 749.3042 m
205.0562 751.4639 209.376 752.4722 211.248 753.0479 C
211.248 753.48 211.248 753.8398 211.248 754.2002 C
211.6079 754.272 211.9678 754.3438 212.3281 754.3438 C
212.4722 754.1279 212.688 753.9121 212.9038 753.6958 C
212.04 752.832 212.5439 751.9678 212.6162 749.9521 C
212.7598 750.312 212.9038 750.6719 213.0479 750.96 C
213.1201 751.0322 213.2642 751.104 213.4082 751.1758 C
212.6162 751.5361 213.0479 752.3999 213.0479 752.4722 C
213.6958 752.9038 214.0562 752.9761 215.4238 752.832 C
215.5679 751.9678 215.7119 751.104 215.856 750.2402 C
216.0718 750.168 216.2881 750.0239 216.5039 749.8799 C
214.272 748.7998 211.5361 749.6641 209.4482 749.3042 C
f69.48 749.376 m
69.48 749.5918 69.5518 749.7358 69.624 749.8799 C
69.7681 749.9521 69.9121 750.0239 70.1279 750.0962 C
70.1279 752.2559 68.3281 754.2002 68.3999 754.3438 C
69.1919 754.3438 69.9839 754.3438 70.8481 754.3438 C
70.8481 754.272 70.8481 754.2002 70.9199 754.0562 C
70.7759 753.9839 70.6318 753.8398 70.4878 753.6958 C
71.208 752.2559 71.208 752.2559 71.4238 752.1841 C
71.6401 752.7598 71.856 753.3359 72.144 753.8398 C
71.9282 753.9121 71.7842 753.9839 71.6401 754.0562 C
71.6401 754.2002 71.7119 754.272 71.7842 754.3438 C
72.2158 754.3438 72.7202 754.3438 73.2241 754.3438 C
73.2241 754.272 73.2959 754.2002 73.3682 754.0562 C
72.0718 752.6162 71.7842 752.3281 71.7842 749.9521 C
71.856 749.9521 71.9282 749.9521 72.0718 749.8799 C
72.0718 749.7358 72.0718 749.5918 72.144 749.4482 C
71.208 749.4482 70.3442 749.4482 69.48 749.376 C
f196.7041 749.52 m
197.1362 750.8159 197.064 752.04 196.7041 752.7598 C
196.8481 752.9038 196.9922 753.0479 197.208 753.1201 C
197.208 753.48 197.208 753.8398 197.208 754.2002 C
197.4961 754.272 197.856 754.272 198.2158 754.272 C
198.5039 753.8398 198.5039 753.48 198.144 752.9761 C
198.4321 752.688 198.4321 751.0322 198.5039 749.9521 C
198.6479 750.0239 198.792 750.0962 199.0078 750.0962 C
199.0078 752.04 199.0078 752.04 198.792 752.832 C
199.6563 752.9038 200.5918 752.9038 201.5278 752.9038 C
202.1758 752.2559 201.8159 750.96 202.4639 749.5918 C
200.52 749.5918 198.5762 749.5918 196.7041 749.52 C
f37.2959 749.6641 m
35.856 750.0962 34.416 750.4561 33.0479 750.8159 C
33.0479 752.9038 33.1201 754.9199 33.1919 756.936 C
33.2642 754.9922 33.3359 753.0479 33.4082 751.0322 C
34.7759 750.7441 36.2158 750.3838 37.6558 750.0239 C
41.9038 765.5039 46.1519 780.9839 50.3999 796.4639 C
45.936 796.4639 37.0801 794.52 33.8398 795.6001 C
39.4561 796.0322 45.0718 796.4639 50.7598 796.896 C
46.4399 781.2002 42.1919 765.4321 37.9438 749.6641 C
37.728 749.6641 37.5122 749.6641 37.2959 749.6641 C
f0 0 0 0 k
21.4561 749.7358 m
21.3838 766.7998 21.312 783.8643 21.2402 800.856 C
25.5601 800.1357 42.3359 793.0801 40.0322 784.7998 C
38.5918 782.7119 37.0801 780.7681 35.1362 778.8242 C
43.8481 768.168 29.6641 756.0723 21.4561 749.7358 C
f142.8481 749.8799 m
142.8481 750.6001 142.8481 751.3198 142.9199 752.04 C
142.9922 752.1118 143.064 752.1118 143.1362 752.1118 C
143.1362 751.4639 143.208 750.8159 143.2798 750.0962 C
143.1362 750.0239 142.9922 749.9521 142.8481 749.8799 C
f0 0 0 1 k
38.8799 750.0239 m
38.8799 760.3921 48.3838 785.5918 51.2642 796.0322 C
51.48 796.104 51.6958 796.1758 51.9839 796.1758 C
47.7358 780.8398 43.5601 765.5039 39.3838 750.0962 C
39.168 750.0962 39.0239 750.0962 38.8799 750.0239 C
f0 0 0 0 k
50.9038 750.0239 m
47.6641 754.9199 54.5762 754.8481 51.7681 750.0962 C
51.48 750.0962 51.1919 750.0962 50.9038 750.0239 C
f56.1602 750.0239 m
53.4238 755.4961 59.6162 754.4878 56.9521 750.0962 C
56.6641 750.0962 56.376 750.0962 56.1602 750.0239 C
f105.4082 749.9521 m
105.4082 750.6719 105.48 751.3921 105.5518 752.04 C
105.9839 751.6079 105.9121 750.6719 105.4082 749.9521 C
f135.792 749.9521 m
135.792 750.6719 135.792 751.3921 135.8638 752.04 C
135.936 752.1118 136.0078 752.1118 136.0801 752.1118 C
136.0801 751.4639 136.1519 750.8159 136.2241 750.0962 C
136.0801 750.0962 135.936 750.0239 135.792 749.9521 C
f144.7202 749.9521 m
144.7202 750.6719 144.7202 751.3921 144.7202 752.04 C
144.792 752.1118 144.8638 752.1118 144.936 752.1118 C
144.936 751.4639 145.0078 750.8159 145.0801 750.0962 C
144.936 750.0962 144.792 750.0239 144.7202 749.9521 C
f158.9761 749.9521 m
158.9761 750.6719 158.9761 751.3921 159.0479 752.04 C
159.1201 752.1118 159.1919 752.1118 159.2642 752.1118 C
159.2642 751.4639 159.3359 750.8159 159.4082 750.0962 C
159.2642 750.0962 159.1201 750.0239 158.9761 749.9521 C
f171.4321 749.9521 m
171.4321 751.3198 171.5039 752.6162 171.5762 753.9121 C
172.0801 753.4082 172.0078 751.752 172.0078 750.312 C
171.792 750.2402 171.5762 750.0962 171.4321 749.9521 C
f200.376 749.9521 m
200.376 750.6719 200.4482 751.3921 200.52 752.04 C
200.52 751.3921 200.5918 750.7441 200.6641 750.0962 C
200.52 750.0962 200.4482 750.0239 200.376 749.9521 C
f162.7202 750.2402 m
162.6479 750.8882 162.5762 751.5361 162.5762 752.1118 C
162.7202 752.1118 162.8638 752.1118 163.0801 752.1118 C
163.0801 751.5361 163.0801 750.96 163.0801 750.312 C
162.792 750.0962 162.792 750.0962 162.7202 750.2402 C
f192.96 750.2402 m
192.8882 750.8882 192.8159 751.5361 192.8159 752.1118 C
193.0322 752.1118 193.248 752.1118 193.4639 752.04 C
193.3921 751.4639 193.3921 750.8882 193.3921 750.312 C
193.0322 750.0962 193.0322 750.0962 192.96 750.2402 C
f203.9038 750.2402 m
203.9038 750.8882 203.9038 751.4639 203.9038 752.04 C
204.0479 752.04 204.1919 752.04 204.4082 752.04 C
204.3359 751.4639 204.3359 750.8882 204.3359 750.2402 C
204.1919 750.2402 204.0479 750.2402 203.9038 750.2402 C
f102.5278 750.312 m
101.8081 751.3921 102.0962 751.5361 102.0239 752.2559 C
102.168 752.2559 102.312 752.2559 102.5278 752.1841 C
102.4561 752.1118 102.3838 752.04 102.3838 751.896 C
102.5278 751.752 102.6719 751.6079 102.8882 751.3921 C
103.248 751.5361 103.6079 751.6802 103.9678 751.752 C
103.9678 751.3198 104.04 750.8882 104.1118 750.4561 C
103.5361 750.4561 103.0322 750.3838 102.5278 750.312 C
f119.0161 750.312 m
118.9438 750.312 118.8721 750.312 118.7998 750.312 C
118.5122 751.3198 118.3682 751.3921 118.5122 752.2559 C
118.7998 751.9678 119.0879 751.6802 119.4482 751.3921 C
119.7358 751.5361 120.0239 751.6079 120.312 751.6802 C
120.312 751.3198 120.312 750.8882 120.3838 750.4561 C
119.8799 750.4561 119.4482 750.3838 119.0161 750.312 C
f148.3921 750.312 m
148.3198 750.6001 148.248 750.8159 148.1758 751.0322 C
149.04 751.0322 148.9678 751.3921 150.1201 751.0322 C
149.6162 750.7441 149.04 750.312 148.3921 750.312 C
f187.9199 750.2402 m
187.9199 750.96 187.9199 751.6079 187.9199 752.2559 C
188.064 752.2559 188.2798 752.1841 188.4961 752.1118 C
188.4238 751.6079 188.4238 751.0322 188.4238 750.4561 C
188.208 750.3838 188.064 750.312 187.9199 750.2402 C
f190.0801 750.312 m
190.0078 750.5278 189.936 750.7441 189.8638 750.8882 C
191.1602 751.104 191.1602 751.104 191.376 751.3198 C
191.376 751.1758 191.376 751.0322 191.4482 750.8159 C
191.0161 750.5278 190.5122 750.312 190.0801 750.312 C
f209.8081 750.312 m
209.0161 750.6719 209.4482 752.2559 Y
209.8081 751.6802 209.8081 751.6802 210.3838 751.3198 C
210.8159 751.4639 210.312 752.1118 211.1758 751.6802 C
211.248 750.2402 211.1758 750.312 209.8081 750.312 C
f121.752 750.312 m
121.752 750.96 121.8242 751.6079 121.896 752.2559 C
121.9678 752.2559 122.04 752.1841 122.1841 752.1118 C
122.1841 751.5361 122.1841 750.96 122.2559 750.3838 C
122.04 750.3838 121.896 750.3838 121.752 750.312 C
f179.4961 751.6802 m
179.5679 751.9678 179.6401 752.1841 179.7119 752.3999 C
179.9282 752.2559 179.9282 752.2559 179.9282 751.752 C
179.7842 751.752 179.6401 751.752 179.4961 751.6802 C
f91.2241 752.3999 m
91.2241 752.832 91.2241 753.2642 91.2241 753.6958 C
91.5122 753.6958 91.7998 753.6958 92.1602 753.6958 C
92.0161 753.48 91.728 752.6162 91.2241 752.3999 C
f0 0 0 1 k
24.1919 757.0801 m
23.6162 757.6563 24.1201 773.6401 24.1201 774.792 C
28.0801 774.6479 30.4561 775.5122 32.1118 770.9761 C
32.1118 775.9438 28.0801 775.1519 25.0562 775.4399 C
24.9839 775.584 24.9121 775.728 24.9121 775.8721 C
26.5679 775.7998 28.2241 775.6563 29.8799 775.5122 C
38.2319 772.2002 24.2642 757.0078 24.1919 757.0801 C
f124.6318 757.0801 m
125.1362 758.4482 125.4238 758.376 126.7202 758.8799 C
126.7202 759.5278 126.7202 760.1758 126.792 760.752 C
117.5762 753.0479 120.0962 772.4878 128.1602 766.4399 C
128.0161 765.8643 127.8721 765.2881 127.7998 764.6401 C
126.5039 765.2158 125.208 765.792 123.9121 766.3682 C
122.1118 763.1279 122.04 759.6001 127.2959 761.9038 C
127.6558 763.416 128.2319 762.7681 128.8081 763.6318 C
128.8081 760.8242 127.6558 757.7998 124.6318 757.0801 C
f82.0078 757.2241 m
72.8638 758.5918 78.624 767.1602 85.4639 767.6641 C
86.04 766.6563 85.6802 765.0723 85.3198 763.416 C
83.3042 771.48 70.6318 757.8721 86.832 759.0962 C
90 760.6802 88.6318 766.2241 88.6318 768.0962 C
88.7041 768.168 88.7759 768.2402 88.8481 768.312 C
89.5679 765.4321 90.4321 762.5518 88.3442 759.168 C
87.9121 759.168 87.5518 759.168 87.1919 759.0962 C
87.1919 757.0801 82.8721 757.2959 82.0078 757.2241 C
f99.0718 757.2241 m
90 758.5918 95.5439 767.6641 102.5278 767.6641 C
103.0322 766.584 102.7441 765.144 102.3838 763.416 C
102.0962 764.064 101.8081 764.6401 101.52 765.2158 C
95.832 767.0879 91.0801 760.3198 104.1841 758.7358 C
103.896 758.376 103.6079 758.0161 103.3921 757.584 C
101.9521 757.5122 100.5122 757.3682 99.0718 757.2241 C
f114.2642 757.3682 m
113.7598 757.5122 113.3281 757.6563 112.896 757.7998 C
112.8242 758.1602 112.752 758.52 112.6802 758.8799 C
114.3359 758.376 116.208 758.4482 118.584 759.0962 C
118.4399 761.3999 117.936 764.1357 117.3599 765.792 C
115.3442 764.4961 115.2002 762.8398 114.7681 760.248 C
113.1841 760.0322 113.1841 760.0322 112.752 760.1758 C
112.752 761.9761 113.04 765.936 112.248 766.2959 C
110.6641 764.3521 110.2319 762.9121 109.2959 760.3198 C
107.7119 759.8882 107.7119 759.8882 107.208 759.96 C
108.144 762.9121 107.7842 765.0723 106.0562 766.4399 C
104.9761 765.144 105.1919 764.6401 105.0479 762.6958 C
105.3359 762.6958 105.624 762.6958 105.9839 762.624 C
105.6958 762.3359 105.4082 762.0479 105.1919 761.688 C
101.8799 761.688 106.0562 767.1602 106.7759 767.7358 C
108.7202 767.0161 108.2158 765.936 109.9438 764.7842 C
110.8799 765.7197 112.6079 768.2402 114.4082 767.6641 C
114.624 766.8721 114.9121 766.0801 115.2002 765.2158 C
116.6401 766.2241 117.144 766.6563 119.0161 767.0879 C
120.8882 762.624 120.3838 757.3682 114.2642 757.3682 C
f0 0 0 0 k
24.3359 757.5122 m
24.3359 763.2002 24.3359 768.8159 24.3359 774.4321 C
26.5679 774.3599 28.728 774.6479 30.96 772.9922 C
33.1201 769.752 27.0718 759.312 24.3359 757.5122 C
f0 0 0 1 k
74.8081 759.168 m
72.936 761.688 74.2319 766.3682 75.2402 768.3838 C
75.6001 768.4561 76.0322 768.4561 76.4639 768.4561 C
73.8721 764.064 76.104 762.624 74.8799 758.9521 C
74.8081 759.0239 74.8081 759.0962 74.8081 759.168 C
f137.7358 759.2402 m
138.3838 760.1758 139.0322 761.1118 139.752 761.9761 C
135.2158 763.6318 137.0161 766.728 140.9761 767.0879 C
142.6318 765 141.4082 758.0161 137.7358 759.2402 C
f143.208 759.2402 m
144 760.0322 144.6479 761.04 145.2959 761.9761 C
140.7598 763.272 142.4878 767.0879 146.52 767.0879 C
148.1758 765 147.168 758.3042 143.208 759.2402 C
f148.3198 759.2402 m
149.2559 759.96 151.3438 763.1279 151.0562 763.7041 C
151.3438 764.208 151.6318 764.6401 151.9199 765.0723 C
148.5361 764.7842 148.5361 764.7842 148.3198 764.9277 C
148.5361 765.5762 148.8242 766.2241 149.1118 766.7998 C
150.624 766.8721 152.1362 766.8721 153.7202 766.8721 C
153.7202 766.7998 149.9761 758.4482 148.3198 759.2402 C
f162.4321 759.2402 m
163.2241 759.7441 164.0161 761.1118 164.52 761.9761 C
159.6958 763.1279 162 766.7998 165.8159 767.3042 C
167.04 765.2158 166.6802 758.2319 162.4321 759.2402 C
f167.9761 759.2402 m
168.624 760.1758 169.272 761.1118 169.9922 761.9761 C
165.5278 763.416 167.2559 767.0879 171.2158 767.0879 C
173.4482 764.1357 171.936 760.104 167.9761 759.2402 C
f158.7598 759.312 m
158.7598 760.896 158.832 762.48 158.9038 763.9922 C
158.04 763.5601 158.04 763.5601 157.896 763.272 C
157.896 765.6479 158.832 765.5039 160.9199 766.6563 C
160.9199 761.1118 161.4238 761.9761 158.7598 759.312 C
f133.9922 759.6001 m
133.9922 761.1118 134.064 762.5518 134.1362 763.9922 C
133.7759 763.7759 133.416 763.5601 133.1279 763.272 C
133.2002 763.8481 133.272 764.4238 133.3438 765 C
134.2798 765.5762 135.2158 766.1519 136.1519 766.6563 C
136.584 765.144 136.2241 762.0479 135.7202 760.0322 C
135.144 759.8882 134.5679 759.7441 133.9922 759.6001 C
f174.8159 759.8882 m
172.3682 760.3198 172.5122 762.9839 173.9521 763.416 C
173.376 766.4399 173.8081 769.6802 177.624 766.6563 C
177.624 765.7197 177.0479 765.2158 176.832 763.9922 C
178.3438 761.9761 177.0479 760.3198 174.8159 759.8882 C
f0 0 0 0 k
175.104 761.1118 m
174.312 761.9038 174.6001 762.2642 174.5278 762.9121 C
174.6719 762.9839 174.8882 762.9839 175.104 762.9839 C
175.248 762.6958 175.4639 762.4082 175.6802 762.1201 C
175.6079 761.832 175.5361 761.4722 175.4639 761.1118 C
175.3198 761.1118 175.1758 761.1118 175.104 761.1118 C
f0 0 0 1 k
153.792 762.6958 m
153.792 762.8398 153.8638 762.9121 153.936 762.9839 C
155.0161 762.9839 156.168 762.9839 157.3198 762.9839 C
157.8242 762.48 155.0161 762.624 153.792 762.6958 C
f0 0 0 0 k
139.752 762.9839 m
139.0322 764.1357 139.248 764.7119 139.248 765.5762 C
139.3921 765.5762 139.5361 765.5762 139.752 765.5762 C
140.04 765 140.1841 764.5679 140.1841 763.272 C
140.04 763.2002 139.896 763.1279 139.752 762.9839 C
f145.2959 762.9839 m
144.5762 764.1357 144.792 764.7119 144.792 765.5762 C
144.936 765.5762 145.0801 765.5762 145.2959 765.5762 C
145.584 764.9277 145.728 764.5679 145.584 763.0562 C
145.4399 763.0562 145.3682 763.0562 145.2959 762.9839 C
f164.52 762.9839 m
163.6563 764.2803 163.8721 765.0723 164.1602 765.6479 C
164.8799 765.6479 164.8799 764.064 164.9521 763.0562 C
164.8081 763.0562 164.6641 763.0562 164.52 762.9839 C
f169.9922 762.9839 m
169.272 764.064 169.5601 764.7842 169.5601 765.5762 C
169.7041 765.5762 169.9199 765.5762 170.1362 765.5762 C
170.208 764.7842 170.2798 763.9199 170.4238 763.0562 C
170.2798 763.0562 170.1362 763.0562 169.9922 762.9839 C
f175.5361 764.7119 m
174.7441 765.5039 175.0322 765.8643 175.0322 766.1519 C
175.104 766.2241 175.1758 766.2959 175.248 766.2959 C
175.4639 766.1519 175.6802 765.936 175.9678 765.7197 C
175.9678 765.2881 175.8242 765 175.5361 764.7119 C
f0 0 0 1 k
23.9761 777.3838 m
23.9761 782.7119 24.0479 787.9678 24.1201 793.2241 C
27.4321 793.728 35.064 789.5518 34.5601 784.4399 C
37.1519 790.9199 26.7842 792 25.272 794.3042 C
28.6558 794.3042 37.6558 789.2642 34.6318 783.936 C
34.416 783.936 34.2002 783.8643 34.0562 783.792 C
33.1201 781.9199 25.416 776.9521 23.9761 777.3838 C
f0 0 0 0 k
24.48 777.6719 m
24.48 782.7842 24.48 787.896 24.48 792.936 C
36.3599 790.9922 37.1519 782.2803 24.48 777.6719 C
fULB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
