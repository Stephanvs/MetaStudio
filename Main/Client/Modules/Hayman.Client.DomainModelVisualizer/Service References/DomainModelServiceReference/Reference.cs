//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Hayman.Client.DomainModelVisualizerModule.DomainModelServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MetaModelDto", Namespace="http://schemas.datacontract.org/2004/07/DomainModelService.ServiceInterface.DataC" +
        "ontracts")]
    [System.SerializableAttribute()]
    public partial class MetaModelDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Hayman.Client.DomainModelVisualizerModule.DomainModelServiceReference.MetaitemDto RootItemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Hayman.Client.DomainModelVisualizerModule.DomainModelServiceReference.MetaitemDto RootItem {
            get {
                return this.RootItemField;
            }
            set {
                if ((object.ReferenceEquals(this.RootItemField, value) != true)) {
                    this.RootItemField = value;
                    this.RaisePropertyChanged("RootItem");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MetaitemDto", Namespace="http://schemas.datacontract.org/2004/07/DomainModelService.ServiceInterface.DataC" +
        "ontracts")]
    [System.SerializableAttribute()]
    public partial class MetaitemDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Hayman.Client.DomainModelVisualizerModule.DomainModelServiceReference.MetaAssociationDtoList AssociationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Hayman.Client.DomainModelVisualizerModule.DomainModelServiceReference.MetaAssociationDtoList Associations {
            get {
                return this.AssociationsField;
            }
            set {
                if ((object.ReferenceEquals(this.AssociationsField, value) != true)) {
                    this.AssociationsField = value;
                    this.RaisePropertyChanged("Associations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="MetaAssociationDtoList", Namespace="http://schemas.datacontract.org/2004/07/DomainModelService.ServiceInterface.DataC" +
        "ontracts", ItemName="MetaAssociationDto")]
    [System.SerializableAttribute()]
    public class MetaAssociationDtoList : System.Collections.Generic.List<Hayman.Client.DomainModelVisualizerModule.DomainModelServiceReference.MetaAssociationDto> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MetaAssociationDto", Namespace="http://schemas.datacontract.org/2004/07/DomainModelService.ServiceInterface.DataC" +
        "ontracts")]
    [System.SerializableAttribute()]
    public partial class MetaAssociationDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Hayman.Client.DomainModelVisualizerModule.DomainModelServiceReference.MetaitemDto TargetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Hayman.Client.DomainModelVisualizerModule.DomainModelServiceReference.MetaAssociationTypeDto TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Hayman.Client.DomainModelVisualizerModule.DomainModelServiceReference.MetaitemDto Target {
            get {
                return this.TargetField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetField, value) != true)) {
                    this.TargetField = value;
                    this.RaisePropertyChanged("Target");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Hayman.Client.DomainModelVisualizerModule.DomainModelServiceReference.MetaAssociationTypeDto Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MetaAssociationTypeDto", Namespace="http://schemas.datacontract.org/2004/07/DomainModelService.ServiceInterface.DataC" +
        "ontracts")]
    public enum MetaAssociationTypeDto : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Subtyping = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reference = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DomainModelServiceReference.IDomainModelService")]
    public interface IDomainModelService {
        
        // CODEGEN: Generating message contract since the operation GetMetaModel is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDomainModelService/GetMetaModel", ReplyAction="http://tempuri.org/IDomainModelService/GetMetaModelResponse")]
        Hayman.Client.DomainModelVisualizerModule.DomainModelServiceReference.MetaModelResponse GetMetaModel(Hayman.Client.DomainModelVisualizerModule.DomainModelServiceReference.MetaModelRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MetaModelRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Name;
        
        public MetaModelRequest() {
        }
        
        public MetaModelRequest(string Name) {
            this.Name = Name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MetaModelResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Hayman.Client.DomainModelVisualizerModule.DomainModelServiceReference.MetaModelDto MetaModel;
        
        public MetaModelResponse() {
        }
        
        public MetaModelResponse(Hayman.Client.DomainModelVisualizerModule.DomainModelServiceReference.MetaModelDto MetaModel) {
            this.MetaModel = MetaModel;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDomainModelServiceChannel : Hayman.Client.DomainModelVisualizerModule.DomainModelServiceReference.IDomainModelService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DomainModelServiceClient : System.ServiceModel.ClientBase<Hayman.Client.DomainModelVisualizerModule.DomainModelServiceReference.IDomainModelService>, Hayman.Client.DomainModelVisualizerModule.DomainModelServiceReference.IDomainModelService {
        
        public DomainModelServiceClient() {
        }
        
        public DomainModelServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DomainModelServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DomainModelServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DomainModelServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Hayman.Client.DomainModelVisualizerModule.DomainModelServiceReference.MetaModelResponse Hayman.Client.DomainModelVisualizerModule.DomainModelServiceReference.IDomainModelService.GetMetaModel(Hayman.Client.DomainModelVisualizerModule.DomainModelServiceReference.MetaModelRequest request) {
            return base.Channel.GetMetaModel(request);
        }
        
        public Hayman.Client.DomainModelVisualizerModule.DomainModelServiceReference.MetaModelDto GetMetaModel(string Name) {
            Hayman.Client.DomainModelVisualizerModule.DomainModelServiceReference.MetaModelRequest inValue = new Hayman.Client.DomainModelVisualizerModule.DomainModelServiceReference.MetaModelRequest();
            inValue.Name = Name;
            Hayman.Client.DomainModelVisualizerModule.DomainModelServiceReference.MetaModelResponse retVal = ((Hayman.Client.DomainModelVisualizerModule.DomainModelServiceReference.IDomainModelService)(this)).GetMetaModel(inValue);
            return retVal.MetaModel;
        }
    }
}
