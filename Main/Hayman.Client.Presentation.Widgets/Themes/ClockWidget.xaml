<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:vm="clr-namespace:Hayman.Client.Presentation.Widgets.ViewModels"
                    xmlns:s="clr-namespace:System;assembly=mscorlib">

     <!-- ClockWidgetViewModel default DataTemplate -->
    <DataTemplate DataType="{x:Type vm:ClockWidgetViewModel}">
        <DataTemplate.Resources>
            <!-- Get the current DateTime just once and stash it in
                a Tag property of an arbitrary FrameworkElement. -->

            <FrameworkElement x:Key="dt" Tag="{x:Static s:DateTime.Now}" />

            <!-- Multiply Hour by 30 degrees and Minute by 0.5 degrees
                and add. Result is stored in angleHour.Value.OffsetX. -->

            <TransformGroup x:Key="angleHour">
                <TranslateTransform
                X="{Binding Source={StaticResource dt}, Path=Tag.Hour}"
                Y="{Binding Source={StaticResource dt}, Path=Tag.Minute}" />
                <MatrixTransform Matrix="30 0 0.5 1 0 0" />
            </TransformGroup>

            <!-- Multiply Minute by 6 degrees & Second by 0.1 degrees
                and add. Result is stored in angleMinute.Value.OffsetX. -->

            <TransformGroup x:Key="angleMinute">
                <TranslateTransform 
                X="{Binding Source={StaticResource dt}, Path=Tag.Minute}"
                Y="{Binding Source={StaticResource dt}, Path=Tag.Second}" />
                <MatrixTransform Matrix="6 0 0.1 1 0 0" />
            </TransformGroup>

            <!-- Multiply Second by 6 degrees. Result is angleSecond.Value.M11. -->

            <TransformGroup x:Key="angleSecond">
                <ScaleTransform 
                ScaleX="{Binding Source={StaticResource dt}, Path=Tag.Second}" />
                <ScaleTransform ScaleX="6" />
            </TransformGroup>

            <!-- Every drawn object is a Path, so this style affects all of them. -->

            <Style TargetType="{x:Type Path}">
                <Setter Property="Stroke" Value="White" />
                <Setter Property="StrokeThickness" Value="3" />
                <Setter Property="StrokeStartLineCap" Value="Round" />
                <Setter Property="StrokeEndLineCap" Value="Round" />
                <Setter Property="StrokeLineJoin" Value="Round" />
                <Setter Property="StrokeDashCap" Value="Round" />
            </Style>
        </DataTemplate.Resources>
        <Viewbox Stretch="Fill"  Margin="0,4,0,0">
            <!-- Draw clock on canvas with center at (0, 0) -->

            <Canvas Width="200" Height="200">
                <Canvas.RenderTransform>
                    <TranslateTransform X="100" Y="100" />
                </Canvas.RenderTransform>
                

                <!-- Tick marks (small and large). -->

                <Path Data="M 0 -90 A 90 90 0 1 1 -0.01 -90"
                          StrokeDashArray="0 3.14157" />

                <Path Data="M 0 -90 A 90 90 0 1 1 -0.01 -90"
                          StrokeDashArray="0 7.854"
                          StrokeThickness="6" />

                <!-- Hour hand. -->

                <Path Data="M 0 15 L 10 0, 0 -60, -10 0 Z" 
                          Fill="White">
                    <Path.RenderTransform>
                        <RotateTransform x:Name="xformHour"
                                Angle="{Binding Source={StaticResource angleHour}, 
                                                Path=Value.OffsetX}" />
                    </Path.RenderTransform>
                </Path>

                <!-- Minute hand. -->

                <Path Data="M 0 20 L 5 0 0 -80 -5 0 Z" 
                          Fill="White">
                    <Path.RenderTransform>
                        <RotateTransform x:Name="xformMinute" 
                                Angle="{Binding Source={StaticResource angleMinute}, 
                                                Path=Value.OffsetX}" />
                    </Path.RenderTransform>
                </Path>

                <!-- Second hand. -->

                <Path Data="M 0 10 L 0 -80">
                    <Path.RenderTransform>
                        <RotateTransform x:Name="xformSecond" 
                                Angle="{Binding Source={StaticResource angleSecond}, 
                                                Path=Value.M11}" />
                    </Path.RenderTransform>
                </Path>
            </Canvas>
        </Viewbox>
        <DataTemplate.Triggers>
            <EventTrigger RoutedEvent="Canvas.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="xformHour"
                                     Storyboard.TargetProperty="Angle"
                                     From="0" To="360" Duration="12:0:0"
                                     IsAdditive="True"
                                     RepeatBehavior="Forever" />

                        <DoubleAnimation Storyboard.TargetName="xformMinute"
                                     Storyboard.TargetProperty="Angle"
                                     From="0" To="360" Duration="1:0:0"
                                     IsAdditive="True"
                                     RepeatBehavior="Forever" />

                        <DoubleAnimation Storyboard.TargetName="xformSecond"
                                     Storyboard.TargetProperty="Angle"
                                     From="0" To="360" Duration="0:1:0"
                                     IsAdditive="True"
                                     RepeatBehavior="Forever" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
   
</ResourceDictionary>