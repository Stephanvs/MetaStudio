<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options">

    <!-- Brushes -->
    <LinearGradientBrush x:Key="GenericBackground01"
						 MappingMode="Absolute"
                         EndPoint="0,40"
						 StartPoint="0,0" >
        <GradientStop Color="#45740C"
					  Offset="0" />
        <GradientStop Color="#89BA4D"
					  Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GenericBackground02"
						 EndPoint="0.5,-1.828"
						 StartPoint="0.5,2.827">
        <GradientStop Color="#FF070048"
					  Offset="0" />
        <GradientStop Color="#FF101E5B"
					  Offset="0.22471900284290314" />
        <GradientStop Color="#FF14346C"
					  Offset="0.5" />
        <GradientStop Color="#FF19477D"
					  Offset="0.5" />
        <GradientStop Color="#FF19477D"
					  Offset="1" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ButtonBorder"
					 Color="#FF003C74"
					 PresentationOptions:Freeze="True" />
    <SolidColorBrush x:Key="ForegroundColor01"
					 Color="White"
					 PresentationOptions:Freeze="True" />

    <!-- Button Focus Visual -->
    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle SnapsToDevicePixels="true"
							   Margin="4"
							   Stroke="Black"
							   StrokeDashArray="1 2"
							   StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Transparent Button -->
    <Style x:Key="TransparentButton"
		   TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle"
				Value="{DynamicResource ButtonFocusVisual}" />
        <Setter Property="Foreground"
				Value="White" />
        <Setter Property="Background"
				Value="Transparent" />
        <Setter Property="BorderBrush"
				Value="{StaticResource ButtonBorder}" />
        <Setter Property="BorderThickness"
				Value="1,1,1,1" />
        <Setter Property="HorizontalContentAlignment"
				Value="Center" />
        <Setter Property="VerticalContentAlignment"
				Value="Center" />
        <Setter Property="IsTabStop"
				Value="False" />
        <Setter Property="Focusable"
				Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="Chrome"
								   RadiusX="3"
								   RadiusY="3"
								   Opacity="0"
								   Fill="Snow" />
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
								 Value="True">
                            <Setter TargetName="Chrome"
									Property="Visibility"
									Value="Visible" />
                            <Setter TargetName="Chrome"
									Property="Opacity"
									Value="0.15" />
                        </Trigger>
                        <Trigger Property="IsPressed"
								 Value="True">
                            <Setter TargetName="Chrome"
									Property="Opacity"
									Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
								 Value="false">
                            <Setter Property="Foreground"
									Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Minimize/Maximize/Close Button's Default Templates -->
    <Style x:Key="CloseButtonStyle"
		   TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle"
				Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Foreground"
				Value="White" />
        <Setter Property="Background"
				Value="Transparent" />
        <Setter Property="BorderBrush"
				Value="{StaticResource ButtonBorder}" />
        <Setter Property="BorderThickness"
				Value="1,1,1,1" />
        <Setter Property="HorizontalContentAlignment"
				Value="Center" />
        <Setter Property="VerticalContentAlignment"
				Value="Center" />
        <Setter Property="IsTabStop"
				Value="False" />
        <Setter Property="Focusable"
				Value="False" />
        <Setter Property="Width"
				Value="22" />
        <Setter Property="Height"
				Value="22" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="Chrome"
								   RadiusX="3"
								   RadiusY="3"
								   Opacity="0"
								   Fill="Snow" />
                        <Path Stretch="Fill"
							  StrokeThickness="0"
							  Stroke="#FF000000"
							  Fill="{TemplateBinding Foreground}"
							  Width="10"
							  Height="10"
							  Data="M2.7340088,0 L8.0660095,5.3320007 13.39798,0 16.132996,2.7340088 10.800995,8.0659943 16.132996,13.397995 13.39798,16.132004 8.0669861,10.800003 2.7340088,16.132004 0,13.397995 5.3320007,8.0659943 0,2.7340088 z"
							  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
								 Value="True">
                            <Setter TargetName="Chrome"
									Property="Visibility"
									Value="Visible" />
                            <Setter TargetName="Chrome"
									Property="Opacity"
									Value="0.15" />
                        </Trigger>
                        <Trigger Property="IsPressed"
								 Value="True">
                            <Setter TargetName="Chrome"
									Property="Opacity"
									Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
								 Value="false">
                            <Setter Property="Foreground"
									Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MaximizeButtonStyle"
		   TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle"
				Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Foreground"
				Value="White" />
        <Setter Property="Background"
				Value="Transparent" />
        <Setter Property="BorderBrush"
				Value="{StaticResource ButtonBorder}" />
        <Setter Property="BorderThickness"
				Value="1,1,1,1" />
        <Setter Property="HorizontalContentAlignment"
				Value="Center" />
        <Setter Property="VerticalContentAlignment"
				Value="Center" />
        <Setter Property="IsTabStop"
				Value="False" />
        <Setter Property="Focusable"
				Value="False" />
        <Setter Property="Width"
				Value="22" />
        <Setter Property="Height"
				Value="22" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="Chrome"
								   RadiusX="3"
								   RadiusY="3"
								   Opacity="0"
								   Fill="Snow" />
                        <Path Stretch="Fill"
							  Stroke="#FF000000"
							  StrokeThickness="0"
							  Fill="White"
							  Width="10"
							  Height="10"
							  Data="F1 M3.125,6.125 L8.125,6 8.125,2.5 3.125,2.5 z M0.25,0.24999994 L10.75,0.24999994 10.75,8.5 0.25,8.5 0.25,0.24999994 z"
							  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
								 Value="True">
                            <Setter TargetName="Chrome"
									Property="Visibility"
									Value="Visible" />
                            <Setter TargetName="Chrome"
									Property="Opacity"
									Value="0.15" />
                        </Trigger>
                        <Trigger Property="IsPressed"
								 Value="True">
                            <Setter TargetName="Chrome"
									Property="Opacity"
									Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
								 Value="false">
                            <Setter Property="Foreground"
									Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MinimizeButtonStyle"
		   TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle"
				Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Foreground"
				Value="White" />
        <Setter Property="Background"
				Value="Transparent" />
        <Setter Property="BorderBrush"
				Value="{StaticResource ButtonBorder}" />
        <Setter Property="BorderThickness"
				Value="1,1,1,1" />
        <Setter Property="HorizontalContentAlignment"
				Value="Center" />
        <Setter Property="VerticalContentAlignment"
				Value="Center" />
        <Setter Property="Width"
				Value="22" />
        <Setter Property="Height"
				Value="22" />
        <Setter Property="IsTabStop"
				Value="False" />
        <Setter Property="Focusable"
				Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="Chrome"
								   RadiusX="3"
								   RadiusY="3"
								   Opacity="0"
								   Fill="Snow" />
                        <Path Stretch="Fill"
							  Stroke="#FF000000"
							  StrokeThickness="0"
							  Fill="#FFFFFFFF"
							  Width="10"
							  Height="6"
							  Data="F1 M3.3548387,0.19021733 z M10.806452,5.3015754 L10.75,8.5 0.25,8.5 0.2220012,5.4211337 z"
							  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
								 Value="True">
                            <Setter TargetName="Chrome"
									Property="Visibility"
									Value="Visible" />
                            <Setter TargetName="Chrome"
									Property="Opacity"
									Value="0.15" />
                        </Trigger>
                        <Trigger Property="IsPressed"
								 Value="True">
                            <Setter TargetName="Chrome"
									Property="Opacity"
									Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
								 Value="false">
                            <Setter Property="Foreground"
									Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Default ListBox Style -->
    <Style x:Key="DefaultListBoxStyle"
		   TargetType="{x:Type ListBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <ScrollViewer x:Name="ScrollViewer"
								  Style="{DynamicResource DefaultScrollViewerStyle}"
								  Padding="{TemplateBinding Padding}">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="OutsideFontColor"
					 Color="#FF000000"
					 PresentationOptions:Freeze="True" />
    <Color x:Key="PressStroke2">#FF2C628B</Color>
    <Color x:Key="TreeviewArrowNorm">WhiteSmoke</Color>
    <Color x:Key="TreeviewArrowOver">White</Color>
    <Color x:Key="TreeviewArrowCheck">WhiteSmoke</Color>
    <Color x:Key="ItemOver1">#FFF4FAFD</Color>
    <Color x:Key="ItemOver2">#FFCFEDFD</Color>
    <Color x:Key="ItemOverStroke">#FFD8F0FA</Color>
    <Color x:Key="ItemSelectStroke">#FFD8F0FA</Color>
    <Color x:Key="Over1">#FFE2F5FF</Color>

    <SolidColorBrush x:Key="btnPressStroke2"
					 Color="{StaticResource PressStroke2}"
					 PresentationOptions:Freeze="True" />
    <SolidColorBrush x:Key="treeviewArrowUnchecked"
					 Color="{StaticResource TreeviewArrowNorm}"
					 PresentationOptions:Freeze="True" />
    <SolidColorBrush x:Key="treeviewArrowHover"
					 Color="{StaticResource TreeviewArrowOver}"
					 PresentationOptions:Freeze="True" />
    <SolidColorBrush x:Key="treeviewArrowChecked"
					 Color="{StaticResource TreeviewArrowCheck}"
					 PresentationOptions:Freeze="True" />
    <SolidColorBrush x:Key="hoverStroke"
					 Color="{StaticResource ItemOverStroke}"
					 PresentationOptions:Freeze="True" />
    <SolidColorBrush x:Key="selectedStroke"
					 Color="{StaticResource ItemSelectStroke}"
					 PresentationOptions:Freeze="True" />

    <LinearGradientBrush x:Key="hoverGradient"
						 EndPoint="0.5,1"
						 StartPoint="0.5,0">
        <GradientStop Color="{StaticResource ItemOver1}"
					  Offset="0.5" />
        <GradientStop Color="{StaticResource Over1}"
					  Offset="0.5" />
        <GradientStop Color="{StaticResource ItemOver2}"
					  Offset="1" />
    </LinearGradientBrush>

    <Style x:Key="DefaultTreeViewStyle"
		   TargetType="{x:Type TreeView}">
        <Setter Property="Background"
				Value="#FFFFFFFF" />
        <Setter Property="Foreground"
				Value="{StaticResource OutsideFontColor}" />
        <Setter Property="HorizontalContentAlignment"
				Value="Left" />
        <Setter Property="VerticalContentAlignment"
				Value="Top" />
        <Setter Property="BorderBrush"
				Value="{StaticResource btnPressStroke2}" />
        <Setter Property="BorderThickness"
				Value="1" />
        <Setter Property="Padding"
				Value="4" />
        <Setter Property="Cursor"
				Value="Arrow" />
        <Setter Property="Foreground"
				Value="{StaticResource OutsideFontColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Grid>
                        <Border x:Name="Border"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="2">
                            <ScrollViewer Style="{DynamicResource DefaultScrollViewerStyle}"
										  Focusable="False"
										  Background="{TemplateBinding Background}"
										  Padding="4"
										  HorizontalScrollBarVisibility="Auto"
										  VerticalScrollBarVisibility="Auto"
										  CanContentScroll="False">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NuclearTreeViewItemToggleButton"
		   TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable"
				Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedVisual"
														   Storyboard.TargetProperty="(Shape.Fill)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000"
														Value="{StaticResource treeviewArrowHover}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="UncheckedVisual"
														   Storyboard.TargetProperty="(Shape.Fill)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000"
														Value="{StaticResource treeviewArrowHover}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedVisual"
														   Storyboard.TargetProperty="(Shape.Fill)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.4000000"
														Value="{StaticResource treeviewArrowChecked}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="UncheckedVisual"
														   Storyboard.TargetProperty="(Shape.Fill)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.4000000"
														Value="{StaticResource treeviewArrowUnchecked}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="CheckedOn">
                            <DoubleAnimation Duration="00:00:00.1000000"
											 Storyboard.TargetName="UncheckedVisual"
											 Storyboard.TargetProperty="Opacity"
											 To="0" />
                            <DoubleAnimation Duration="00:00:00.1000000"
											 Storyboard.TargetName="CheckedVisual"
											 Storyboard.TargetProperty="Opacity"
											 To="1" />
                        </Storyboard>
                        <Storyboard x:Key="CheckedOff">
                            <DoubleAnimation Duration="00:00:00.4000000"
											 Storyboard.TargetName="UncheckedVisual"
											 Storyboard.TargetProperty="Opacity"
											 To="1" />
                            <DoubleAnimation Duration="00:00:00.4000000"
											 Storyboard.TargetName="CheckedVisual"
											 Storyboard.TargetProperty="Opacity"
											 To="0" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid HorizontalAlignment="Right"
						  Margin="2,2,5,2">
                        <Path x:Name="UncheckedVisual"
							  Height="9"
							  Width="6"
							  HorizontalAlignment="Right"
							  VerticalAlignment="Center"
							  Fill="{StaticResource treeviewArrowUnchecked}"
							  StrokeLineJoin="Miter"
							  Data="M 0,0 L 0,9 L 5,4.5 Z" />
                        <Path x:Name="CheckedVisual"
							  Height="6"
							  Width="6"
							  HorizontalAlignment="Right"
							  VerticalAlignment="Center"
							  Fill="{StaticResource treeviewArrowChecked}"
							  StrokeLineJoin="Miter"
							  Opacity="0"
							  Data="M 6,0 L 6,6 L 0,6 Z" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
								 Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsChecked"
								 Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource CheckedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource CheckedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultTreeViewItemStyle"
		   TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background"
				Value="Transparent" />
        <Setter Property="HorizontalContentAlignment"
				Value="Left" />
        <Setter Property="VerticalContentAlignment"
				Value="Top" />
        <Setter Property="Padding"
				Value="5,3,15,3" />
        <Setter Property="Cursor"
				Value="Arrow" />
        <Setter Property="Foreground"
				Value="{StaticResource OutsideFontColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimation Duration="00:00:00.1000000"
											 Storyboard.TargetName="select_gradient"
											 Storyboard.TargetProperty="Opacity"
											 To="1" />
                            <DoubleAnimation Duration="00:00:00.1000000"
											 Storyboard.TargetName="select_highlight"
											 Storyboard.TargetProperty="Opacity"
											 To="1" />
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimation Duration="00:00:00.4000000"
											 Storyboard.TargetName="select_gradient"
											 Storyboard.TargetProperty="Opacity"
											 To="0" />
                            <DoubleAnimation Duration="00:00:00.4000000"
											 Storyboard.TargetName="select_highlight"
											 Storyboard.TargetProperty="Opacity"
											 To="0" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
														   Storyboard.TargetName="hover_gradient"
														   Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
													  Value="0.65" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
														   Storyboard.TargetName="highlight"
														   Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
													  Value="1" />
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
														   Storyboard.TargetName="hover_gradient"
														   Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000"
													  Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
														   Storyboard.TargetName="highlight"
														   Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000"
													  Value="0" />
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19"
											  Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander"
									  Style="{DynamicResource NuclearTreeViewItemToggleButton}"
									  IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
									  ClickMode="Press" />

                        <Rectangle x:Name="select_gradient"
								   Grid.Column="1"
								   Stroke="{StaticResource selectedStroke}"
								   StrokeThickness="1"
								   RadiusX="2"
								   RadiusY="2"
								   Opacity="0"
								   IsHitTestVisible="False" />
                        <Rectangle x:Name="select_highlight"
								   Margin="1"
								   Grid.Column="1"
								   Stroke="#A0FFFFFF"
								   Opacity="0" />
                        <Rectangle x:Name="inactive"
								   Grid.Column="1"
								   Fill="#FF999999"
								   Stroke="#FF333333"
								   StrokeThickness="1"
								   RadiusX="2"
								   RadiusY="2"
								   Opacity="0"
								   IsHitTestVisible="False" />
                        <Rectangle x:Name="hover_gradient"
								   Grid.Column="1"
								   Fill="{StaticResource hoverGradient}"
								   Stroke="{StaticResource hoverStroke}"
								   StrokeThickness="1"
								   RadiusX="2"
								   RadiusY="2"
								   Opacity="0"
								   IsHitTestVisible="False" />
                        <Rectangle x:Name="highlight"
								   Grid.Column="1"
								   Margin="1"
								   StrokeThickness="1"
								   RadiusX="1"
								   RadiusY="1"
								   Opacity="0"
								   IsHitTestVisible="False"
								   Stroke="#FFFFFFFF" />
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  x:Name="PART_Header"
										  ContentSource="Header"
										  Grid.Column="1"
										  Margin="{TemplateBinding Padding}" />

                        <ItemsPresenter Grid.Column="1"
										Grid.ColumnSpan="2"
										Grid.Row="1"
										x:Name="ItemsHost" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
								 Value="true"
								 SourceName="PART_Header">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsExpanded"
								 Value="false">
                            <Setter Property="Visibility"
									Value="Collapsed"
									TargetName="ItemsHost" />
                        </Trigger>
                        <Trigger Property="HasItems"
								 Value="false">
                            <Setter Property="Visibility"
									Value="Hidden"
									TargetName="Expander" />
                        </Trigger>
                        <Trigger Property="IsSelected"
								 Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
										   Value="true" />
                                <Condition Property="IsSelectionActive"
										   Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground"
									Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"
								 Value="false">
                            <Setter Property="Foreground"
									Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="TextBoxBorder"
						 EndPoint="0,20"
						 MappingMode="Absolute"
						 StartPoint="0,0">
        <GradientStop Color="#ABADB3"
					  Offset="0.05" />
        <GradientStop Color="#E2E3EA"
					  Offset="0.07" />
        <GradientStop Color="#E3E9EF"
					  Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TextBoxErrorBackground"
						 EndPoint="0,20"
						 MappingMode="Absolute"
						 StartPoint="0,0">
        <GradientStop Color="#DAB6B6"
					  Offset="0.0" />
        <GradientStop Color="#E4BFBF"
					  Offset="0.5" />
        <GradientStop Color="#FDD3D3"
					  Offset="1" />
    </LinearGradientBrush>

    <Style x:Key="DefaultTextBoxStyle"
		   TargetType="{x:Type TextBox}">
        <Style.Triggers>
            <Trigger Property="IsEnabled"
					 Value="false">
                <Setter Property="Background"
						Value="{StaticResource TextBoxErrorBackground}" />
                <Setter Property="Foreground"
						Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
            <Trigger Property="Validation.HasError"
					 Value="true">
                <Setter Property="ToolTip"
						Value="{Binding RelativeSource={x:Static RelativeSource.Self},
						Path=(Validation.Errors)[0].ErrorContent}" />
                <Setter Property="Background"
						Value="{StaticResource TextBoxErrorBackground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>